//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ManagerEmployeeNeoCharacter {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ManagerEmployeeNeoCharacterDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ManagerEmployeeNeoCharacterDataSet : global::System.Data.DataSet {
        
        private CharacterDataTable tableCharacter;
        
        private EmployeeDataTable tableEmployee;
        
        private NeoDataTable tableNeo;
        
        private StatussDataTable tableStatuss;
        
        private global::System.Data.DataRelation _relationFK_dbo_Character_dbo_Employee_EmployeeID;
        
        private global::System.Data.DataRelation _relationFK_dbo_Neo_dbo_Employee_EmployeeID;
        
        private global::System.Data.DataRelation _relationFK_dbo_Statuss_dbo_Employee_EmployeeID;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ManagerEmployeeNeoCharacterDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected ManagerEmployeeNeoCharacterDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Character"] != null)) {
                    base.Tables.Add(new CharacterDataTable(ds.Tables["Character"]));
                }
                if ((ds.Tables["Employee"] != null)) {
                    base.Tables.Add(new EmployeeDataTable(ds.Tables["Employee"]));
                }
                if ((ds.Tables["Neo"] != null)) {
                    base.Tables.Add(new NeoDataTable(ds.Tables["Neo"]));
                }
                if ((ds.Tables["Statuss"] != null)) {
                    base.Tables.Add(new StatussDataTable(ds.Tables["Statuss"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CharacterDataTable Character {
            get {
                return this.tableCharacter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EmployeeDataTable Employee {
            get {
                return this.tableEmployee;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public NeoDataTable Neo {
            get {
                return this.tableNeo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StatussDataTable Statuss {
            get {
                return this.tableStatuss;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            ManagerEmployeeNeoCharacterDataSet cln = ((ManagerEmployeeNeoCharacterDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Character"] != null)) {
                    base.Tables.Add(new CharacterDataTable(ds.Tables["Character"]));
                }
                if ((ds.Tables["Employee"] != null)) {
                    base.Tables.Add(new EmployeeDataTable(ds.Tables["Employee"]));
                }
                if ((ds.Tables["Neo"] != null)) {
                    base.Tables.Add(new NeoDataTable(ds.Tables["Neo"]));
                }
                if ((ds.Tables["Statuss"] != null)) {
                    base.Tables.Add(new StatussDataTable(ds.Tables["Statuss"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableCharacter = ((CharacterDataTable)(base.Tables["Character"]));
            if ((initTable == true)) {
                if ((this.tableCharacter != null)) {
                    this.tableCharacter.InitVars();
                }
            }
            this.tableEmployee = ((EmployeeDataTable)(base.Tables["Employee"]));
            if ((initTable == true)) {
                if ((this.tableEmployee != null)) {
                    this.tableEmployee.InitVars();
                }
            }
            this.tableNeo = ((NeoDataTable)(base.Tables["Neo"]));
            if ((initTable == true)) {
                if ((this.tableNeo != null)) {
                    this.tableNeo.InitVars();
                }
            }
            this.tableStatuss = ((StatussDataTable)(base.Tables["Statuss"]));
            if ((initTable == true)) {
                if ((this.tableStatuss != null)) {
                    this.tableStatuss.InitVars();
                }
            }
            this._relationFK_dbo_Character_dbo_Employee_EmployeeID = this.Relations["FK_dbo.Character_dbo.Employee_EmployeeID"];
            this._relationFK_dbo_Neo_dbo_Employee_EmployeeID = this.Relations["FK_dbo.Neo_dbo.Employee_EmployeeID"];
            this._relationFK_dbo_Statuss_dbo_Employee_EmployeeID = this.Relations["FK_dbo.Statuss_dbo.Employee_EmployeeID"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "ManagerEmployeeNeoCharacterDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ManagerEmployeeNeoCharacterDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCharacter = new CharacterDataTable();
            base.Tables.Add(this.tableCharacter);
            this.tableEmployee = new EmployeeDataTable();
            base.Tables.Add(this.tableEmployee);
            this.tableNeo = new NeoDataTable();
            base.Tables.Add(this.tableNeo);
            this.tableStatuss = new StatussDataTable();
            base.Tables.Add(this.tableStatuss);
            this._relationFK_dbo_Character_dbo_Employee_EmployeeID = new global::System.Data.DataRelation("FK_dbo.Character_dbo.Employee_EmployeeID", new global::System.Data.DataColumn[] {
                        this.tableEmployee.EmployeeIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableCharacter.EmployeeIDColumn}, false);
            this.Relations.Add(this._relationFK_dbo_Character_dbo_Employee_EmployeeID);
            this._relationFK_dbo_Neo_dbo_Employee_EmployeeID = new global::System.Data.DataRelation("FK_dbo.Neo_dbo.Employee_EmployeeID", new global::System.Data.DataColumn[] {
                        this.tableEmployee.EmployeeIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableNeo.EmployeeIDColumn}, false);
            this.Relations.Add(this._relationFK_dbo_Neo_dbo_Employee_EmployeeID);
            this._relationFK_dbo_Statuss_dbo_Employee_EmployeeID = new global::System.Data.DataRelation("FK_dbo.Statuss_dbo.Employee_EmployeeID", new global::System.Data.DataColumn[] {
                        this.tableEmployee.EmployeeIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableStatuss.EmployeeIDColumn}, false);
            this.Relations.Add(this._relationFK_dbo_Statuss_dbo_Employee_EmployeeID);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeCharacter() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeEmployee() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeNeo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeStatuss() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ManagerEmployeeNeoCharacterDataSet ds = new ManagerEmployeeNeoCharacterDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void CharacterRowChangeEventHandler(object sender, CharacterRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void EmployeeRowChangeEventHandler(object sender, EmployeeRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void NeoRowChangeEventHandler(object sender, NeoRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void StatussRowChangeEventHandler(object sender, StatussRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CharacterDataTable : global::System.Data.TypedTableBase<CharacterRow> {
            
            private global::System.Data.DataColumn columnCharacterID;
            
            private global::System.Data.DataColumn columnAA;
            
            private global::System.Data.DataColumn columnAB;
            
            private global::System.Data.DataColumn columnAC;
            
            private global::System.Data.DataColumn columnAD;
            
            private global::System.Data.DataColumn columnAE;
            
            private global::System.Data.DataColumn columnAF;
            
            private global::System.Data.DataColumn columnAG;
            
            private global::System.Data.DataColumn columnAH;
            
            private global::System.Data.DataColumn columnA;
            
            private global::System.Data.DataColumn columnBA;
            
            private global::System.Data.DataColumn columnBB;
            
            private global::System.Data.DataColumn columnBC;
            
            private global::System.Data.DataColumn columnBD;
            
            private global::System.Data.DataColumn columnBE;
            
            private global::System.Data.DataColumn columnBF;
            
            private global::System.Data.DataColumn columnBG;
            
            private global::System.Data.DataColumn columnBH;
            
            private global::System.Data.DataColumn columnB;
            
            private global::System.Data.DataColumn columnGA;
            
            private global::System.Data.DataColumn columnGB;
            
            private global::System.Data.DataColumn columnGC;
            
            private global::System.Data.DataColumn columnGD;
            
            private global::System.Data.DataColumn columnGE;
            
            private global::System.Data.DataColumn columnGF;
            
            private global::System.Data.DataColumn columnGG;
            
            private global::System.Data.DataColumn columnGH;
            
            private global::System.Data.DataColumn columnG;
            
            private global::System.Data.DataColumn columnDA;
            
            private global::System.Data.DataColumn columnDB;
            
            private global::System.Data.DataColumn columnDC;
            
            private global::System.Data.DataColumn columnDD;
            
            private global::System.Data.DataColumn columnDE;
            
            private global::System.Data.DataColumn columnDF;
            
            private global::System.Data.DataColumn columnDG;
            
            private global::System.Data.DataColumn columnDH;
            
            private global::System.Data.DataColumn columnD;
            
            private global::System.Data.DataColumn columnHA;
            
            private global::System.Data.DataColumn columnHB;
            
            private global::System.Data.DataColumn columnHC;
            
            private global::System.Data.DataColumn columnHD;
            
            private global::System.Data.DataColumn columnHE;
            
            private global::System.Data.DataColumn columnHF;
            
            private global::System.Data.DataColumn columnHG;
            
            private global::System.Data.DataColumn columnHH;
            
            private global::System.Data.DataColumn columnH;
            
            private global::System.Data.DataColumn columnEmployeeID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CharacterDataTable() {
                this.TableName = "Character";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CharacterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected CharacterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CharacterIDColumn {
                get {
                    return this.columnCharacterID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AAColumn {
                get {
                    return this.columnAA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ABColumn {
                get {
                    return this.columnAB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACColumn {
                get {
                    return this.columnAC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ADColumn {
                get {
                    return this.columnAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AEColumn {
                get {
                    return this.columnAE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AFColumn {
                get {
                    return this.columnAF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AGColumn {
                get {
                    return this.columnAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AHColumn {
                get {
                    return this.columnAH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AColumn {
                get {
                    return this.columnA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BAColumn {
                get {
                    return this.columnBA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BBColumn {
                get {
                    return this.columnBB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BCColumn {
                get {
                    return this.columnBC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BDColumn {
                get {
                    return this.columnBD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BEColumn {
                get {
                    return this.columnBE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BFColumn {
                get {
                    return this.columnBF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BGColumn {
                get {
                    return this.columnBG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BHColumn {
                get {
                    return this.columnBH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BColumn {
                get {
                    return this.columnB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GAColumn {
                get {
                    return this.columnGA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GBColumn {
                get {
                    return this.columnGB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GCColumn {
                get {
                    return this.columnGC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GDColumn {
                get {
                    return this.columnGD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GEColumn {
                get {
                    return this.columnGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GFColumn {
                get {
                    return this.columnGF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GGColumn {
                get {
                    return this.columnGG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GHColumn {
                get {
                    return this.columnGH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GColumn {
                get {
                    return this.columnG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DAColumn {
                get {
                    return this.columnDA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DBColumn {
                get {
                    return this.columnDB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DCColumn {
                get {
                    return this.columnDC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DDColumn {
                get {
                    return this.columnDD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DEColumn {
                get {
                    return this.columnDE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DFColumn {
                get {
                    return this.columnDF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DGColumn {
                get {
                    return this.columnDG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DHColumn {
                get {
                    return this.columnDH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DColumn {
                get {
                    return this.columnD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HAColumn {
                get {
                    return this.columnHA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HBColumn {
                get {
                    return this.columnHB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HCColumn {
                get {
                    return this.columnHC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HDColumn {
                get {
                    return this.columnHD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HEColumn {
                get {
                    return this.columnHE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HFColumn {
                get {
                    return this.columnHF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HGColumn {
                get {
                    return this.columnHG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HHColumn {
                get {
                    return this.columnHH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HColumn {
                get {
                    return this.columnH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeeIDColumn {
                get {
                    return this.columnEmployeeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CharacterRow this[int index] {
                get {
                    return ((CharacterRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CharacterRowChangeEventHandler CharacterRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CharacterRowChangeEventHandler CharacterRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CharacterRowChangeEventHandler CharacterRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CharacterRowChangeEventHandler CharacterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddCharacterRow(CharacterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CharacterRow AddCharacterRow(
                        int AA, 
                        int AB, 
                        int AC, 
                        int AD, 
                        int AE, 
                        int AF, 
                        int AG, 
                        int AH, 
                        int A, 
                        int BA, 
                        int BB, 
                        int BC, 
                        int BD, 
                        int BE, 
                        int BF, 
                        int BG, 
                        int BH, 
                        int B, 
                        int GA, 
                        int GB, 
                        int GC, 
                        int GD, 
                        int GE, 
                        int GF, 
                        int GG, 
                        int GH, 
                        int G, 
                        int DA, 
                        int DB, 
                        int DC, 
                        int DD, 
                        int DE, 
                        int DF, 
                        int DG, 
                        int DH, 
                        int D, 
                        int HA, 
                        int HB, 
                        int HC, 
                        int HD, 
                        int HE, 
                        int HF, 
                        int HG, 
                        int HH, 
                        int H, 
                        EmployeeRow _parentEmployeeRowByFK_dbo_Character_dbo_Employee_EmployeeID) {
                CharacterRow rowCharacterRow = ((CharacterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        AA,
                        AB,
                        AC,
                        AD,
                        AE,
                        AF,
                        AG,
                        AH,
                        A,
                        BA,
                        BB,
                        BC,
                        BD,
                        BE,
                        BF,
                        BG,
                        BH,
                        B,
                        GA,
                        GB,
                        GC,
                        GD,
                        GE,
                        GF,
                        GG,
                        GH,
                        G,
                        DA,
                        DB,
                        DC,
                        DD,
                        DE,
                        DF,
                        DG,
                        DH,
                        D,
                        HA,
                        HB,
                        HC,
                        HD,
                        HE,
                        HF,
                        HG,
                        HH,
                        H,
                        null};
                if ((_parentEmployeeRowByFK_dbo_Character_dbo_Employee_EmployeeID != null)) {
                    columnValuesArray[46] = _parentEmployeeRowByFK_dbo_Character_dbo_Employee_EmployeeID[0];
                }
                rowCharacterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCharacterRow);
                return rowCharacterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CharacterRow FindByCharacterID(int CharacterID) {
                return ((CharacterRow)(this.Rows.Find(new object[] {
                            CharacterID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CharacterDataTable cln = ((CharacterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CharacterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCharacterID = base.Columns["CharacterID"];
                this.columnAA = base.Columns["AA"];
                this.columnAB = base.Columns["AB"];
                this.columnAC = base.Columns["AC"];
                this.columnAD = base.Columns["AD"];
                this.columnAE = base.Columns["AE"];
                this.columnAF = base.Columns["AF"];
                this.columnAG = base.Columns["AG"];
                this.columnAH = base.Columns["AH"];
                this.columnA = base.Columns["A"];
                this.columnBA = base.Columns["BA"];
                this.columnBB = base.Columns["BB"];
                this.columnBC = base.Columns["BC"];
                this.columnBD = base.Columns["BD"];
                this.columnBE = base.Columns["BE"];
                this.columnBF = base.Columns["BF"];
                this.columnBG = base.Columns["BG"];
                this.columnBH = base.Columns["BH"];
                this.columnB = base.Columns["B"];
                this.columnGA = base.Columns["GA"];
                this.columnGB = base.Columns["GB"];
                this.columnGC = base.Columns["GC"];
                this.columnGD = base.Columns["GD"];
                this.columnGE = base.Columns["GE"];
                this.columnGF = base.Columns["GF"];
                this.columnGG = base.Columns["GG"];
                this.columnGH = base.Columns["GH"];
                this.columnG = base.Columns["G"];
                this.columnDA = base.Columns["DA"];
                this.columnDB = base.Columns["DB"];
                this.columnDC = base.Columns["DC"];
                this.columnDD = base.Columns["DD"];
                this.columnDE = base.Columns["DE"];
                this.columnDF = base.Columns["DF"];
                this.columnDG = base.Columns["DG"];
                this.columnDH = base.Columns["DH"];
                this.columnD = base.Columns["D"];
                this.columnHA = base.Columns["HA"];
                this.columnHB = base.Columns["HB"];
                this.columnHC = base.Columns["HC"];
                this.columnHD = base.Columns["HD"];
                this.columnHE = base.Columns["HE"];
                this.columnHF = base.Columns["HF"];
                this.columnHG = base.Columns["HG"];
                this.columnHH = base.Columns["HH"];
                this.columnH = base.Columns["H"];
                this.columnEmployeeID = base.Columns["EmployeeID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCharacterID = new global::System.Data.DataColumn("CharacterID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCharacterID);
                this.columnAA = new global::System.Data.DataColumn("AA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAA);
                this.columnAB = new global::System.Data.DataColumn("AB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAB);
                this.columnAC = new global::System.Data.DataColumn("AC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAC);
                this.columnAD = new global::System.Data.DataColumn("AD", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAD);
                this.columnAE = new global::System.Data.DataColumn("AE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAE);
                this.columnAF = new global::System.Data.DataColumn("AF", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAF);
                this.columnAG = new global::System.Data.DataColumn("AG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAG);
                this.columnAH = new global::System.Data.DataColumn("AH", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAH);
                this.columnA = new global::System.Data.DataColumn("A", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA);
                this.columnBA = new global::System.Data.DataColumn("BA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBA);
                this.columnBB = new global::System.Data.DataColumn("BB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBB);
                this.columnBC = new global::System.Data.DataColumn("BC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBC);
                this.columnBD = new global::System.Data.DataColumn("BD", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBD);
                this.columnBE = new global::System.Data.DataColumn("BE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBE);
                this.columnBF = new global::System.Data.DataColumn("BF", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBF);
                this.columnBG = new global::System.Data.DataColumn("BG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBG);
                this.columnBH = new global::System.Data.DataColumn("BH", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBH);
                this.columnB = new global::System.Data.DataColumn("B", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnB);
                this.columnGA = new global::System.Data.DataColumn("GA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGA);
                this.columnGB = new global::System.Data.DataColumn("GB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGB);
                this.columnGC = new global::System.Data.DataColumn("GC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGC);
                this.columnGD = new global::System.Data.DataColumn("GD", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGD);
                this.columnGE = new global::System.Data.DataColumn("GE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGE);
                this.columnGF = new global::System.Data.DataColumn("GF", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGF);
                this.columnGG = new global::System.Data.DataColumn("GG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGG);
                this.columnGH = new global::System.Data.DataColumn("GH", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGH);
                this.columnG = new global::System.Data.DataColumn("G", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnG);
                this.columnDA = new global::System.Data.DataColumn("DA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDA);
                this.columnDB = new global::System.Data.DataColumn("DB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDB);
                this.columnDC = new global::System.Data.DataColumn("DC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDC);
                this.columnDD = new global::System.Data.DataColumn("DD", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDD);
                this.columnDE = new global::System.Data.DataColumn("DE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDE);
                this.columnDF = new global::System.Data.DataColumn("DF", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDF);
                this.columnDG = new global::System.Data.DataColumn("DG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDG);
                this.columnDH = new global::System.Data.DataColumn("DH", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDH);
                this.columnD = new global::System.Data.DataColumn("D", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD);
                this.columnHA = new global::System.Data.DataColumn("HA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHA);
                this.columnHB = new global::System.Data.DataColumn("HB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHB);
                this.columnHC = new global::System.Data.DataColumn("HC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHC);
                this.columnHD = new global::System.Data.DataColumn("HD", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHD);
                this.columnHE = new global::System.Data.DataColumn("HE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHE);
                this.columnHF = new global::System.Data.DataColumn("HF", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHF);
                this.columnHG = new global::System.Data.DataColumn("HG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHG);
                this.columnHH = new global::System.Data.DataColumn("HH", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHH);
                this.columnH = new global::System.Data.DataColumn("H", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH);
                this.columnEmployeeID = new global::System.Data.DataColumn("EmployeeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCharacterID}, true));
                this.columnCharacterID.AutoIncrement = true;
                this.columnCharacterID.AutoIncrementSeed = -1;
                this.columnCharacterID.AutoIncrementStep = -1;
                this.columnCharacterID.AllowDBNull = false;
                this.columnCharacterID.ReadOnly = true;
                this.columnCharacterID.Unique = true;
                this.columnAA.AllowDBNull = false;
                this.columnAB.AllowDBNull = false;
                this.columnAC.AllowDBNull = false;
                this.columnAD.AllowDBNull = false;
                this.columnAE.AllowDBNull = false;
                this.columnAF.AllowDBNull = false;
                this.columnAG.AllowDBNull = false;
                this.columnAH.AllowDBNull = false;
                this.columnA.AllowDBNull = false;
                this.columnBA.AllowDBNull = false;
                this.columnBB.AllowDBNull = false;
                this.columnBC.AllowDBNull = false;
                this.columnBD.AllowDBNull = false;
                this.columnBE.AllowDBNull = false;
                this.columnBF.AllowDBNull = false;
                this.columnBG.AllowDBNull = false;
                this.columnBH.AllowDBNull = false;
                this.columnB.AllowDBNull = false;
                this.columnGA.AllowDBNull = false;
                this.columnGB.AllowDBNull = false;
                this.columnGC.AllowDBNull = false;
                this.columnGD.AllowDBNull = false;
                this.columnGE.AllowDBNull = false;
                this.columnGF.AllowDBNull = false;
                this.columnGG.AllowDBNull = false;
                this.columnGH.AllowDBNull = false;
                this.columnG.AllowDBNull = false;
                this.columnDA.AllowDBNull = false;
                this.columnDB.AllowDBNull = false;
                this.columnDC.AllowDBNull = false;
                this.columnDD.AllowDBNull = false;
                this.columnDE.AllowDBNull = false;
                this.columnDF.AllowDBNull = false;
                this.columnDG.AllowDBNull = false;
                this.columnDH.AllowDBNull = false;
                this.columnD.AllowDBNull = false;
                this.columnHA.AllowDBNull = false;
                this.columnHB.AllowDBNull = false;
                this.columnHC.AllowDBNull = false;
                this.columnHD.AllowDBNull = false;
                this.columnHE.AllowDBNull = false;
                this.columnHF.AllowDBNull = false;
                this.columnHG.AllowDBNull = false;
                this.columnHH.AllowDBNull = false;
                this.columnH.AllowDBNull = false;
                this.columnEmployeeID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CharacterRow NewCharacterRow() {
                return ((CharacterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CharacterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CharacterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CharacterRowChanged != null)) {
                    this.CharacterRowChanged(this, new CharacterRowChangeEvent(((CharacterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CharacterRowChanging != null)) {
                    this.CharacterRowChanging(this, new CharacterRowChangeEvent(((CharacterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CharacterRowDeleted != null)) {
                    this.CharacterRowDeleted(this, new CharacterRowChangeEvent(((CharacterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CharacterRowDeleting != null)) {
                    this.CharacterRowDeleting(this, new CharacterRowChangeEvent(((CharacterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveCharacterRow(CharacterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ManagerEmployeeNeoCharacterDataSet ds = new ManagerEmployeeNeoCharacterDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CharacterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EmployeeDataTable : global::System.Data.TypedTableBase<EmployeeRow> {
            
            private global::System.Data.DataColumn columnEmployeeID;
            
            private global::System.Data.DataColumn columnFirstName;
            
            private global::System.Data.DataColumn columnLastName;
            
            private global::System.Data.DataColumn columnEnetrDate;
            
            private global::System.Data.DataColumn columnNameFather;
            
            private global::System.Data.DataColumn columnBirthDate;
            
            private global::System.Data.DataColumn columnBirthCertificateNumber;
            
            private global::System.Data.DataColumn columnNationalCode;
            
            private global::System.Data.DataColumn columnHomeTell;
            
            private global::System.Data.DataColumn columnMobileTell;
            
            private global::System.Data.DataColumn columnHomeAddress;
            
            private global::System.Data.DataColumn columnOfficeAddress;
            
            private global::System.Data.DataColumn columnTheCompanyJobs;
            
            private global::System.Data.DataColumn columnProvince;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmployeeDataTable() {
                this.TableName = "Employee";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EmployeeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected EmployeeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeeIDColumn {
                get {
                    return this.columnEmployeeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FirstNameColumn {
                get {
                    return this.columnFirstName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastNameColumn {
                get {
                    return this.columnLastName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EnetrDateColumn {
                get {
                    return this.columnEnetrDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameFatherColumn {
                get {
                    return this.columnNameFather;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BirthDateColumn {
                get {
                    return this.columnBirthDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BirthCertificateNumberColumn {
                get {
                    return this.columnBirthCertificateNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NationalCodeColumn {
                get {
                    return this.columnNationalCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HomeTellColumn {
                get {
                    return this.columnHomeTell;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MobileTellColumn {
                get {
                    return this.columnMobileTell;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HomeAddressColumn {
                get {
                    return this.columnHomeAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OfficeAddressColumn {
                get {
                    return this.columnOfficeAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TheCompanyJobsColumn {
                get {
                    return this.columnTheCompanyJobs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProvinceColumn {
                get {
                    return this.columnProvince;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmployeeRow this[int index] {
                get {
                    return ((EmployeeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EmployeeRowChangeEventHandler EmployeeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EmployeeRowChangeEventHandler EmployeeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EmployeeRowChangeEventHandler EmployeeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EmployeeRowChangeEventHandler EmployeeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddEmployeeRow(EmployeeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmployeeRow AddEmployeeRow(string FirstName, string LastName, string EnetrDate, string NameFather, string BirthDate, string BirthCertificateNumber, string NationalCode, string HomeTell, string MobileTell, string HomeAddress, string OfficeAddress, string TheCompanyJobs, string Province) {
                EmployeeRow rowEmployeeRow = ((EmployeeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        FirstName,
                        LastName,
                        EnetrDate,
                        NameFather,
                        BirthDate,
                        BirthCertificateNumber,
                        NationalCode,
                        HomeTell,
                        MobileTell,
                        HomeAddress,
                        OfficeAddress,
                        TheCompanyJobs,
                        Province};
                rowEmployeeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEmployeeRow);
                return rowEmployeeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmployeeRow FindByEmployeeID(int EmployeeID) {
                return ((EmployeeRow)(this.Rows.Find(new object[] {
                            EmployeeID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EmployeeDataTable cln = ((EmployeeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EmployeeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnEmployeeID = base.Columns["EmployeeID"];
                this.columnFirstName = base.Columns["FirstName"];
                this.columnLastName = base.Columns["LastName"];
                this.columnEnetrDate = base.Columns["EnetrDate"];
                this.columnNameFather = base.Columns["NameFather"];
                this.columnBirthDate = base.Columns["BirthDate"];
                this.columnBirthCertificateNumber = base.Columns["BirthCertificateNumber"];
                this.columnNationalCode = base.Columns["NationalCode"];
                this.columnHomeTell = base.Columns["HomeTell"];
                this.columnMobileTell = base.Columns["MobileTell"];
                this.columnHomeAddress = base.Columns["HomeAddress"];
                this.columnOfficeAddress = base.Columns["OfficeAddress"];
                this.columnTheCompanyJobs = base.Columns["TheCompanyJobs"];
                this.columnProvince = base.Columns["Province"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnEmployeeID = new global::System.Data.DataColumn("EmployeeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeID);
                this.columnFirstName = new global::System.Data.DataColumn("FirstName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstName);
                this.columnLastName = new global::System.Data.DataColumn("LastName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastName);
                this.columnEnetrDate = new global::System.Data.DataColumn("EnetrDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnetrDate);
                this.columnNameFather = new global::System.Data.DataColumn("NameFather", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNameFather);
                this.columnBirthDate = new global::System.Data.DataColumn("BirthDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBirthDate);
                this.columnBirthCertificateNumber = new global::System.Data.DataColumn("BirthCertificateNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBirthCertificateNumber);
                this.columnNationalCode = new global::System.Data.DataColumn("NationalCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNationalCode);
                this.columnHomeTell = new global::System.Data.DataColumn("HomeTell", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHomeTell);
                this.columnMobileTell = new global::System.Data.DataColumn("MobileTell", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobileTell);
                this.columnHomeAddress = new global::System.Data.DataColumn("HomeAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHomeAddress);
                this.columnOfficeAddress = new global::System.Data.DataColumn("OfficeAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfficeAddress);
                this.columnTheCompanyJobs = new global::System.Data.DataColumn("TheCompanyJobs", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTheCompanyJobs);
                this.columnProvince = new global::System.Data.DataColumn("Province", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProvince);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEmployeeID}, true));
                this.columnEmployeeID.AutoIncrement = true;
                this.columnEmployeeID.AutoIncrementSeed = -1;
                this.columnEmployeeID.AutoIncrementStep = -1;
                this.columnEmployeeID.AllowDBNull = false;
                this.columnEmployeeID.ReadOnly = true;
                this.columnEmployeeID.Unique = true;
                this.columnFirstName.AllowDBNull = false;
                this.columnFirstName.MaxLength = 50;
                this.columnLastName.AllowDBNull = false;
                this.columnLastName.MaxLength = 100;
                this.columnEnetrDate.AllowDBNull = false;
                this.columnEnetrDate.MaxLength = 2147483647;
                this.columnNameFather.AllowDBNull = false;
                this.columnNameFather.MaxLength = 2147483647;
                this.columnBirthDate.MaxLength = 2147483647;
                this.columnBirthCertificateNumber.AllowDBNull = false;
                this.columnBirthCertificateNumber.MaxLength = 2147483647;
                this.columnNationalCode.AllowDBNull = false;
                this.columnNationalCode.MaxLength = 2147483647;
                this.columnHomeTell.AllowDBNull = false;
                this.columnHomeTell.MaxLength = 2147483647;
                this.columnMobileTell.AllowDBNull = false;
                this.columnMobileTell.MaxLength = 2147483647;
                this.columnHomeAddress.AllowDBNull = false;
                this.columnHomeAddress.MaxLength = 2147483647;
                this.columnOfficeAddress.AllowDBNull = false;
                this.columnOfficeAddress.MaxLength = 2147483647;
                this.columnTheCompanyJobs.AllowDBNull = false;
                this.columnTheCompanyJobs.MaxLength = 2147483647;
                this.columnProvince.AllowDBNull = false;
                this.columnProvince.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmployeeRow NewEmployeeRow() {
                return ((EmployeeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EmployeeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EmployeeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EmployeeRowChanged != null)) {
                    this.EmployeeRowChanged(this, new EmployeeRowChangeEvent(((EmployeeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EmployeeRowChanging != null)) {
                    this.EmployeeRowChanging(this, new EmployeeRowChangeEvent(((EmployeeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EmployeeRowDeleted != null)) {
                    this.EmployeeRowDeleted(this, new EmployeeRowChangeEvent(((EmployeeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EmployeeRowDeleting != null)) {
                    this.EmployeeRowDeleting(this, new EmployeeRowChangeEvent(((EmployeeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveEmployeeRow(EmployeeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ManagerEmployeeNeoCharacterDataSet ds = new ManagerEmployeeNeoCharacterDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EmployeeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class NeoDataTable : global::System.Data.TypedTableBase<NeoRow> {
            
            private global::System.Data.DataColumn columnNeoID;
            
            private global::System.Data.DataColumn columnNA;
            
            private global::System.Data.DataColumn columnNB;
            
            private global::System.Data.DataColumn columnNC;
            
            private global::System.Data.DataColumn columnND;
            
            private global::System.Data.DataColumn columnNE;
            
            private global::System.Data.DataColumn columnNF;
            
            private global::System.Data.DataColumn columnNG;
            
            private global::System.Data.DataColumn columnNH;
            
            private global::System.Data.DataColumn columnNI;
            
            private global::System.Data.DataColumn columnNJ;
            
            private global::System.Data.DataColumn columnNK;
            
            private global::System.Data.DataColumn columnNN;
            
            private global::System.Data.DataColumn columnN;
            
            private global::System.Data.DataColumn columnEA;
            
            private global::System.Data.DataColumn columnEB;
            
            private global::System.Data.DataColumn columnEC;
            
            private global::System.Data.DataColumn columnED;
            
            private global::System.Data.DataColumn columnEE;
            
            private global::System.Data.DataColumn columnEF;
            
            private global::System.Data.DataColumn columnEG;
            
            private global::System.Data.DataColumn columnEH;
            
            private global::System.Data.DataColumn columnEI;
            
            private global::System.Data.DataColumn columnEJ;
            
            private global::System.Data.DataColumn columnEK;
            
            private global::System.Data.DataColumn columnEN;
            
            private global::System.Data.DataColumn columnE;
            
            private global::System.Data.DataColumn columnOA;
            
            private global::System.Data.DataColumn columnOB;
            
            private global::System.Data.DataColumn columnOC;
            
            private global::System.Data.DataColumn columnOD;
            
            private global::System.Data.DataColumn columnOE;
            
            private global::System.Data.DataColumn columnOF;
            
            private global::System.Data.DataColumn columnOG;
            
            private global::System.Data.DataColumn columnOH;
            
            private global::System.Data.DataColumn columnOI;
            
            private global::System.Data.DataColumn columnOJ;
            
            private global::System.Data.DataColumn columnOK;
            
            private global::System.Data.DataColumn columnON;
            
            private global::System.Data.DataColumn columnO;
            
            private global::System.Data.DataColumn columnAA;
            
            private global::System.Data.DataColumn columnAB;
            
            private global::System.Data.DataColumn columnAC;
            
            private global::System.Data.DataColumn columnAD;
            
            private global::System.Data.DataColumn columnAE;
            
            private global::System.Data.DataColumn columnAF;
            
            private global::System.Data.DataColumn columnAG;
            
            private global::System.Data.DataColumn columnAH;
            
            private global::System.Data.DataColumn columnAI;
            
            private global::System.Data.DataColumn columnAJ;
            
            private global::System.Data.DataColumn columnAK;
            
            private global::System.Data.DataColumn columnAN;
            
            private global::System.Data.DataColumn columnA;
            
            private global::System.Data.DataColumn columnCA;
            
            private global::System.Data.DataColumn columnCB;
            
            private global::System.Data.DataColumn columnCC;
            
            private global::System.Data.DataColumn columnCD;
            
            private global::System.Data.DataColumn columnCE;
            
            private global::System.Data.DataColumn columnCF;
            
            private global::System.Data.DataColumn columnCG;
            
            private global::System.Data.DataColumn columnCH;
            
            private global::System.Data.DataColumn columnCI;
            
            private global::System.Data.DataColumn columnCJ;
            
            private global::System.Data.DataColumn columnCK;
            
            private global::System.Data.DataColumn columnCN;
            
            private global::System.Data.DataColumn columnC;
            
            private global::System.Data.DataColumn columnEmployeeID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NeoDataTable() {
                this.TableName = "Neo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal NeoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected NeoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NeoIDColumn {
                get {
                    return this.columnNeoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NAColumn {
                get {
                    return this.columnNA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NBColumn {
                get {
                    return this.columnNB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NCColumn {
                get {
                    return this.columnNC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NDColumn {
                get {
                    return this.columnND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NEColumn {
                get {
                    return this.columnNE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NFColumn {
                get {
                    return this.columnNF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NGColumn {
                get {
                    return this.columnNG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NHColumn {
                get {
                    return this.columnNH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NIColumn {
                get {
                    return this.columnNI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NJColumn {
                get {
                    return this.columnNJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NKColumn {
                get {
                    return this.columnNK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NNColumn {
                get {
                    return this.columnNN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NColumn {
                get {
                    return this.columnN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EAColumn {
                get {
                    return this.columnEA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EBColumn {
                get {
                    return this.columnEB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ECColumn {
                get {
                    return this.columnEC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EDColumn {
                get {
                    return this.columnED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EEColumn {
                get {
                    return this.columnEE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EFColumn {
                get {
                    return this.columnEF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EGColumn {
                get {
                    return this.columnEG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EHColumn {
                get {
                    return this.columnEH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EIColumn {
                get {
                    return this.columnEI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EJColumn {
                get {
                    return this.columnEJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EKColumn {
                get {
                    return this.columnEK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ENColumn {
                get {
                    return this.columnEN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EColumn {
                get {
                    return this.columnE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OAColumn {
                get {
                    return this.columnOA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OBColumn {
                get {
                    return this.columnOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OCColumn {
                get {
                    return this.columnOC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ODColumn {
                get {
                    return this.columnOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OEColumn {
                get {
                    return this.columnOE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OFColumn {
                get {
                    return this.columnOF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OGColumn {
                get {
                    return this.columnOG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OHColumn {
                get {
                    return this.columnOH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OIColumn {
                get {
                    return this.columnOI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OJColumn {
                get {
                    return this.columnOJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OKColumn {
                get {
                    return this.columnOK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ONColumn {
                get {
                    return this.columnON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OColumn {
                get {
                    return this.columnO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AAColumn {
                get {
                    return this.columnAA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ABColumn {
                get {
                    return this.columnAB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACColumn {
                get {
                    return this.columnAC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ADColumn {
                get {
                    return this.columnAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AEColumn {
                get {
                    return this.columnAE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AFColumn {
                get {
                    return this.columnAF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AGColumn {
                get {
                    return this.columnAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AHColumn {
                get {
                    return this.columnAH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AIColumn {
                get {
                    return this.columnAI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AJColumn {
                get {
                    return this.columnAJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AKColumn {
                get {
                    return this.columnAK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ANColumn {
                get {
                    return this.columnAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AColumn {
                get {
                    return this.columnA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CAColumn {
                get {
                    return this.columnCA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CBColumn {
                get {
                    return this.columnCB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CCColumn {
                get {
                    return this.columnCC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CDColumn {
                get {
                    return this.columnCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CEColumn {
                get {
                    return this.columnCE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CFColumn {
                get {
                    return this.columnCF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CGColumn {
                get {
                    return this.columnCG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CHColumn {
                get {
                    return this.columnCH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CIColumn {
                get {
                    return this.columnCI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CJColumn {
                get {
                    return this.columnCJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CKColumn {
                get {
                    return this.columnCK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CNColumn {
                get {
                    return this.columnCN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CColumn {
                get {
                    return this.columnC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeeIDColumn {
                get {
                    return this.columnEmployeeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NeoRow this[int index] {
                get {
                    return ((NeoRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NeoRowChangeEventHandler NeoRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NeoRowChangeEventHandler NeoRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NeoRowChangeEventHandler NeoRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NeoRowChangeEventHandler NeoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddNeoRow(NeoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NeoRow AddNeoRow(
                        int NA, 
                        int NB, 
                        int NC, 
                        int ND, 
                        int NE, 
                        int NF, 
                        int NG, 
                        int NH, 
                        int NI, 
                        int NJ, 
                        int NK, 
                        int NN, 
                        int N, 
                        int EA, 
                        int EB, 
                        int EC, 
                        int ED, 
                        int EE, 
                        int EF, 
                        int EG, 
                        int EH, 
                        int EI, 
                        int EJ, 
                        int EK, 
                        int EN, 
                        int E, 
                        int OA, 
                        int OB, 
                        int OC, 
                        int OD, 
                        int OE, 
                        int OF, 
                        int OG, 
                        int OH, 
                        int OI, 
                        int OJ, 
                        int OK, 
                        int ON, 
                        int O, 
                        int AA, 
                        int AB, 
                        int AC, 
                        int AD, 
                        int AE, 
                        int AF, 
                        int AG, 
                        int AH, 
                        int AI, 
                        int AJ, 
                        int AK, 
                        int AN, 
                        int A, 
                        int CA, 
                        int CB, 
                        int CC, 
                        int CD, 
                        int CE, 
                        int CF, 
                        int CG, 
                        int CH, 
                        int CI, 
                        int CJ, 
                        int CK, 
                        int CN, 
                        int C, 
                        EmployeeRow _parentEmployeeRowByFK_dbo_Neo_dbo_Employee_EmployeeID) {
                NeoRow rowNeoRow = ((NeoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        NA,
                        NB,
                        NC,
                        ND,
                        NE,
                        NF,
                        NG,
                        NH,
                        NI,
                        NJ,
                        NK,
                        NN,
                        N,
                        EA,
                        EB,
                        EC,
                        ED,
                        EE,
                        EF,
                        EG,
                        EH,
                        EI,
                        EJ,
                        EK,
                        EN,
                        E,
                        OA,
                        OB,
                        OC,
                        OD,
                        OE,
                        OF,
                        OG,
                        OH,
                        OI,
                        OJ,
                        OK,
                        ON,
                        O,
                        AA,
                        AB,
                        AC,
                        AD,
                        AE,
                        AF,
                        AG,
                        AH,
                        AI,
                        AJ,
                        AK,
                        AN,
                        A,
                        CA,
                        CB,
                        CC,
                        CD,
                        CE,
                        CF,
                        CG,
                        CH,
                        CI,
                        CJ,
                        CK,
                        CN,
                        C,
                        null};
                if ((_parentEmployeeRowByFK_dbo_Neo_dbo_Employee_EmployeeID != null)) {
                    columnValuesArray[66] = _parentEmployeeRowByFK_dbo_Neo_dbo_Employee_EmployeeID[0];
                }
                rowNeoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowNeoRow);
                return rowNeoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NeoRow FindByNeoID(int NeoID) {
                return ((NeoRow)(this.Rows.Find(new object[] {
                            NeoID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                NeoDataTable cln = ((NeoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new NeoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnNeoID = base.Columns["NeoID"];
                this.columnNA = base.Columns["NA"];
                this.columnNB = base.Columns["NB"];
                this.columnNC = base.Columns["NC"];
                this.columnND = base.Columns["ND"];
                this.columnNE = base.Columns["NE"];
                this.columnNF = base.Columns["NF"];
                this.columnNG = base.Columns["NG"];
                this.columnNH = base.Columns["NH"];
                this.columnNI = base.Columns["NI"];
                this.columnNJ = base.Columns["NJ"];
                this.columnNK = base.Columns["NK"];
                this.columnNN = base.Columns["NN"];
                this.columnN = base.Columns["N"];
                this.columnEA = base.Columns["EA"];
                this.columnEB = base.Columns["EB"];
                this.columnEC = base.Columns["EC"];
                this.columnED = base.Columns["ED"];
                this.columnEE = base.Columns["EE"];
                this.columnEF = base.Columns["EF"];
                this.columnEG = base.Columns["EG"];
                this.columnEH = base.Columns["EH"];
                this.columnEI = base.Columns["EI"];
                this.columnEJ = base.Columns["EJ"];
                this.columnEK = base.Columns["EK"];
                this.columnEN = base.Columns["EN"];
                this.columnE = base.Columns["E"];
                this.columnOA = base.Columns["OA"];
                this.columnOB = base.Columns["OB"];
                this.columnOC = base.Columns["OC"];
                this.columnOD = base.Columns["OD"];
                this.columnOE = base.Columns["OE"];
                this.columnOF = base.Columns["OF"];
                this.columnOG = base.Columns["OG"];
                this.columnOH = base.Columns["OH"];
                this.columnOI = base.Columns["OI"];
                this.columnOJ = base.Columns["OJ"];
                this.columnOK = base.Columns["OK"];
                this.columnON = base.Columns["ON"];
                this.columnO = base.Columns["O"];
                this.columnAA = base.Columns["AA"];
                this.columnAB = base.Columns["AB"];
                this.columnAC = base.Columns["AC"];
                this.columnAD = base.Columns["AD"];
                this.columnAE = base.Columns["AE"];
                this.columnAF = base.Columns["AF"];
                this.columnAG = base.Columns["AG"];
                this.columnAH = base.Columns["AH"];
                this.columnAI = base.Columns["AI"];
                this.columnAJ = base.Columns["AJ"];
                this.columnAK = base.Columns["AK"];
                this.columnAN = base.Columns["AN"];
                this.columnA = base.Columns["A"];
                this.columnCA = base.Columns["CA"];
                this.columnCB = base.Columns["CB"];
                this.columnCC = base.Columns["CC"];
                this.columnCD = base.Columns["CD"];
                this.columnCE = base.Columns["CE"];
                this.columnCF = base.Columns["CF"];
                this.columnCG = base.Columns["CG"];
                this.columnCH = base.Columns["CH"];
                this.columnCI = base.Columns["CI"];
                this.columnCJ = base.Columns["CJ"];
                this.columnCK = base.Columns["CK"];
                this.columnCN = base.Columns["CN"];
                this.columnC = base.Columns["C"];
                this.columnEmployeeID = base.Columns["EmployeeID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnNeoID = new global::System.Data.DataColumn("NeoID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNeoID);
                this.columnNA = new global::System.Data.DataColumn("NA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNA);
                this.columnNB = new global::System.Data.DataColumn("NB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNB);
                this.columnNC = new global::System.Data.DataColumn("NC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNC);
                this.columnND = new global::System.Data.DataColumn("ND", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnND);
                this.columnNE = new global::System.Data.DataColumn("NE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNE);
                this.columnNF = new global::System.Data.DataColumn("NF", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNF);
                this.columnNG = new global::System.Data.DataColumn("NG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNG);
                this.columnNH = new global::System.Data.DataColumn("NH", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNH);
                this.columnNI = new global::System.Data.DataColumn("NI", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNI);
                this.columnNJ = new global::System.Data.DataColumn("NJ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNJ);
                this.columnNK = new global::System.Data.DataColumn("NK", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNK);
                this.columnNN = new global::System.Data.DataColumn("NN", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNN);
                this.columnN = new global::System.Data.DataColumn("N", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnN);
                this.columnEA = new global::System.Data.DataColumn("EA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEA);
                this.columnEB = new global::System.Data.DataColumn("EB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEB);
                this.columnEC = new global::System.Data.DataColumn("EC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEC);
                this.columnED = new global::System.Data.DataColumn("ED", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnED);
                this.columnEE = new global::System.Data.DataColumn("EE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEE);
                this.columnEF = new global::System.Data.DataColumn("EF", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEF);
                this.columnEG = new global::System.Data.DataColumn("EG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEG);
                this.columnEH = new global::System.Data.DataColumn("EH", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEH);
                this.columnEI = new global::System.Data.DataColumn("EI", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEI);
                this.columnEJ = new global::System.Data.DataColumn("EJ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEJ);
                this.columnEK = new global::System.Data.DataColumn("EK", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEK);
                this.columnEN = new global::System.Data.DataColumn("EN", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEN);
                this.columnE = new global::System.Data.DataColumn("E", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE);
                this.columnOA = new global::System.Data.DataColumn("OA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOA);
                this.columnOB = new global::System.Data.DataColumn("OB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOB);
                this.columnOC = new global::System.Data.DataColumn("OC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOC);
                this.columnOD = new global::System.Data.DataColumn("OD", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOD);
                this.columnOE = new global::System.Data.DataColumn("OE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOE);
                this.columnOF = new global::System.Data.DataColumn("OF", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOF);
                this.columnOG = new global::System.Data.DataColumn("OG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOG);
                this.columnOH = new global::System.Data.DataColumn("OH", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOH);
                this.columnOI = new global::System.Data.DataColumn("OI", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOI);
                this.columnOJ = new global::System.Data.DataColumn("OJ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOJ);
                this.columnOK = new global::System.Data.DataColumn("OK", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOK);
                this.columnON = new global::System.Data.DataColumn("ON", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnON);
                this.columnO = new global::System.Data.DataColumn("O", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnO);
                this.columnAA = new global::System.Data.DataColumn("AA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAA);
                this.columnAB = new global::System.Data.DataColumn("AB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAB);
                this.columnAC = new global::System.Data.DataColumn("AC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAC);
                this.columnAD = new global::System.Data.DataColumn("AD", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAD);
                this.columnAE = new global::System.Data.DataColumn("AE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAE);
                this.columnAF = new global::System.Data.DataColumn("AF", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAF);
                this.columnAG = new global::System.Data.DataColumn("AG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAG);
                this.columnAH = new global::System.Data.DataColumn("AH", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAH);
                this.columnAI = new global::System.Data.DataColumn("AI", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAI);
                this.columnAJ = new global::System.Data.DataColumn("AJ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAJ);
                this.columnAK = new global::System.Data.DataColumn("AK", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAK);
                this.columnAN = new global::System.Data.DataColumn("AN", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAN);
                this.columnA = new global::System.Data.DataColumn("A", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA);
                this.columnCA = new global::System.Data.DataColumn("CA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCA);
                this.columnCB = new global::System.Data.DataColumn("CB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCB);
                this.columnCC = new global::System.Data.DataColumn("CC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCC);
                this.columnCD = new global::System.Data.DataColumn("CD", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCD);
                this.columnCE = new global::System.Data.DataColumn("CE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCE);
                this.columnCF = new global::System.Data.DataColumn("CF", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCF);
                this.columnCG = new global::System.Data.DataColumn("CG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCG);
                this.columnCH = new global::System.Data.DataColumn("CH", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCH);
                this.columnCI = new global::System.Data.DataColumn("CI", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCI);
                this.columnCJ = new global::System.Data.DataColumn("CJ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCJ);
                this.columnCK = new global::System.Data.DataColumn("CK", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCK);
                this.columnCN = new global::System.Data.DataColumn("CN", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCN);
                this.columnC = new global::System.Data.DataColumn("C", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC);
                this.columnEmployeeID = new global::System.Data.DataColumn("EmployeeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNeoID}, true));
                this.columnNeoID.AutoIncrement = true;
                this.columnNeoID.AutoIncrementSeed = -1;
                this.columnNeoID.AutoIncrementStep = -1;
                this.columnNeoID.AllowDBNull = false;
                this.columnNeoID.ReadOnly = true;
                this.columnNeoID.Unique = true;
                this.columnNA.AllowDBNull = false;
                this.columnNB.AllowDBNull = false;
                this.columnNC.AllowDBNull = false;
                this.columnND.AllowDBNull = false;
                this.columnNE.AllowDBNull = false;
                this.columnNF.AllowDBNull = false;
                this.columnNG.AllowDBNull = false;
                this.columnNH.AllowDBNull = false;
                this.columnNI.AllowDBNull = false;
                this.columnNJ.AllowDBNull = false;
                this.columnNK.AllowDBNull = false;
                this.columnNN.AllowDBNull = false;
                this.columnN.AllowDBNull = false;
                this.columnEA.AllowDBNull = false;
                this.columnEB.AllowDBNull = false;
                this.columnEC.AllowDBNull = false;
                this.columnED.AllowDBNull = false;
                this.columnEE.AllowDBNull = false;
                this.columnEF.AllowDBNull = false;
                this.columnEG.AllowDBNull = false;
                this.columnEH.AllowDBNull = false;
                this.columnEI.AllowDBNull = false;
                this.columnEJ.AllowDBNull = false;
                this.columnEK.AllowDBNull = false;
                this.columnEN.AllowDBNull = false;
                this.columnE.AllowDBNull = false;
                this.columnOA.AllowDBNull = false;
                this.columnOB.AllowDBNull = false;
                this.columnOC.AllowDBNull = false;
                this.columnOD.AllowDBNull = false;
                this.columnOE.AllowDBNull = false;
                this.columnOF.AllowDBNull = false;
                this.columnOG.AllowDBNull = false;
                this.columnOH.AllowDBNull = false;
                this.columnOI.AllowDBNull = false;
                this.columnOJ.AllowDBNull = false;
                this.columnOK.AllowDBNull = false;
                this.columnON.AllowDBNull = false;
                this.columnO.AllowDBNull = false;
                this.columnAA.AllowDBNull = false;
                this.columnAB.AllowDBNull = false;
                this.columnAC.AllowDBNull = false;
                this.columnAD.AllowDBNull = false;
                this.columnAE.AllowDBNull = false;
                this.columnAF.AllowDBNull = false;
                this.columnAG.AllowDBNull = false;
                this.columnAH.AllowDBNull = false;
                this.columnAI.AllowDBNull = false;
                this.columnAJ.AllowDBNull = false;
                this.columnAK.AllowDBNull = false;
                this.columnAN.AllowDBNull = false;
                this.columnA.AllowDBNull = false;
                this.columnCA.AllowDBNull = false;
                this.columnCB.AllowDBNull = false;
                this.columnCC.AllowDBNull = false;
                this.columnCD.AllowDBNull = false;
                this.columnCE.AllowDBNull = false;
                this.columnCF.AllowDBNull = false;
                this.columnCG.AllowDBNull = false;
                this.columnCH.AllowDBNull = false;
                this.columnCI.AllowDBNull = false;
                this.columnCJ.AllowDBNull = false;
                this.columnCK.AllowDBNull = false;
                this.columnCN.AllowDBNull = false;
                this.columnC.AllowDBNull = false;
                this.columnEmployeeID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NeoRow NewNeoRow() {
                return ((NeoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new NeoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(NeoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.NeoRowChanged != null)) {
                    this.NeoRowChanged(this, new NeoRowChangeEvent(((NeoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.NeoRowChanging != null)) {
                    this.NeoRowChanging(this, new NeoRowChangeEvent(((NeoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.NeoRowDeleted != null)) {
                    this.NeoRowDeleted(this, new NeoRowChangeEvent(((NeoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.NeoRowDeleting != null)) {
                    this.NeoRowDeleting(this, new NeoRowChangeEvent(((NeoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveNeoRow(NeoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ManagerEmployeeNeoCharacterDataSet ds = new ManagerEmployeeNeoCharacterDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "NeoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StatussDataTable : global::System.Data.TypedTableBase<StatussRow> {
            
            private global::System.Data.DataColumn columnStatussID;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnNumberSend;
            
            private global::System.Data.DataColumn columnAttach;
            
            private global::System.Data.DataColumn columnEmployeeID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StatussDataTable() {
                this.TableName = "Statuss";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StatussDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected StatussDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StatussIDColumn {
                get {
                    return this.columnStatussID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumberSendColumn {
                get {
                    return this.columnNumberSend;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AttachColumn {
                get {
                    return this.columnAttach;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeeIDColumn {
                get {
                    return this.columnEmployeeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StatussRow this[int index] {
                get {
                    return ((StatussRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StatussRowChangeEventHandler StatussRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StatussRowChangeEventHandler StatussRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StatussRowChangeEventHandler StatussRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StatussRowChangeEventHandler StatussRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddStatussRow(StatussRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StatussRow AddStatussRow(bool Status, bool NumberSend, bool Attach, EmployeeRow _parentEmployeeRowByFK_dbo_Statuss_dbo_Employee_EmployeeID) {
                StatussRow rowStatussRow = ((StatussRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Status,
                        NumberSend,
                        Attach,
                        null};
                if ((_parentEmployeeRowByFK_dbo_Statuss_dbo_Employee_EmployeeID != null)) {
                    columnValuesArray[4] = _parentEmployeeRowByFK_dbo_Statuss_dbo_Employee_EmployeeID[0];
                }
                rowStatussRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStatussRow);
                return rowStatussRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StatussRow FindByStatussID(int StatussID) {
                return ((StatussRow)(this.Rows.Find(new object[] {
                            StatussID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                StatussDataTable cln = ((StatussDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StatussDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnStatussID = base.Columns["StatussID"];
                this.columnStatus = base.Columns["Status"];
                this.columnNumberSend = base.Columns["NumberSend"];
                this.columnAttach = base.Columns["Attach"];
                this.columnEmployeeID = base.Columns["EmployeeID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnStatussID = new global::System.Data.DataColumn("StatussID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatussID);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnNumberSend = new global::System.Data.DataColumn("NumberSend", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberSend);
                this.columnAttach = new global::System.Data.DataColumn("Attach", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttach);
                this.columnEmployeeID = new global::System.Data.DataColumn("EmployeeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnStatussID}, true));
                this.columnStatussID.AutoIncrement = true;
                this.columnStatussID.AutoIncrementSeed = -1;
                this.columnStatussID.AutoIncrementStep = -1;
                this.columnStatussID.AllowDBNull = false;
                this.columnStatussID.ReadOnly = true;
                this.columnStatussID.Unique = true;
                this.columnStatus.AllowDBNull = false;
                this.columnNumberSend.AllowDBNull = false;
                this.columnAttach.AllowDBNull = false;
                this.columnEmployeeID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StatussRow NewStatussRow() {
                return ((StatussRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StatussRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(StatussRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StatussRowChanged != null)) {
                    this.StatussRowChanged(this, new StatussRowChangeEvent(((StatussRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StatussRowChanging != null)) {
                    this.StatussRowChanging(this, new StatussRowChangeEvent(((StatussRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StatussRowDeleted != null)) {
                    this.StatussRowDeleted(this, new StatussRowChangeEvent(((StatussRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StatussRowDeleting != null)) {
                    this.StatussRowDeleting(this, new StatussRowChangeEvent(((StatussRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveStatussRow(StatussRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ManagerEmployeeNeoCharacterDataSet ds = new ManagerEmployeeNeoCharacterDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StatussDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CharacterRow : global::System.Data.DataRow {
            
            private CharacterDataTable tableCharacter;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CharacterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCharacter = ((CharacterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CharacterID {
                get {
                    return ((int)(this[this.tableCharacter.CharacterIDColumn]));
                }
                set {
                    this[this.tableCharacter.CharacterIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AA {
                get {
                    return ((int)(this[this.tableCharacter.AAColumn]));
                }
                set {
                    this[this.tableCharacter.AAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AB {
                get {
                    return ((int)(this[this.tableCharacter.ABColumn]));
                }
                set {
                    this[this.tableCharacter.ABColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AC {
                get {
                    return ((int)(this[this.tableCharacter.ACColumn]));
                }
                set {
                    this[this.tableCharacter.ACColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AD {
                get {
                    return ((int)(this[this.tableCharacter.ADColumn]));
                }
                set {
                    this[this.tableCharacter.ADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AE {
                get {
                    return ((int)(this[this.tableCharacter.AEColumn]));
                }
                set {
                    this[this.tableCharacter.AEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AF {
                get {
                    return ((int)(this[this.tableCharacter.AFColumn]));
                }
                set {
                    this[this.tableCharacter.AFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AG {
                get {
                    return ((int)(this[this.tableCharacter.AGColumn]));
                }
                set {
                    this[this.tableCharacter.AGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AH {
                get {
                    return ((int)(this[this.tableCharacter.AHColumn]));
                }
                set {
                    this[this.tableCharacter.AHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int A {
                get {
                    return ((int)(this[this.tableCharacter.AColumn]));
                }
                set {
                    this[this.tableCharacter.AColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BA {
                get {
                    return ((int)(this[this.tableCharacter.BAColumn]));
                }
                set {
                    this[this.tableCharacter.BAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BB {
                get {
                    return ((int)(this[this.tableCharacter.BBColumn]));
                }
                set {
                    this[this.tableCharacter.BBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BC {
                get {
                    return ((int)(this[this.tableCharacter.BCColumn]));
                }
                set {
                    this[this.tableCharacter.BCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BD {
                get {
                    return ((int)(this[this.tableCharacter.BDColumn]));
                }
                set {
                    this[this.tableCharacter.BDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BE {
                get {
                    return ((int)(this[this.tableCharacter.BEColumn]));
                }
                set {
                    this[this.tableCharacter.BEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BF {
                get {
                    return ((int)(this[this.tableCharacter.BFColumn]));
                }
                set {
                    this[this.tableCharacter.BFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BG {
                get {
                    return ((int)(this[this.tableCharacter.BGColumn]));
                }
                set {
                    this[this.tableCharacter.BGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BH {
                get {
                    return ((int)(this[this.tableCharacter.BHColumn]));
                }
                set {
                    this[this.tableCharacter.BHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int B {
                get {
                    return ((int)(this[this.tableCharacter.BColumn]));
                }
                set {
                    this[this.tableCharacter.BColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int GA {
                get {
                    return ((int)(this[this.tableCharacter.GAColumn]));
                }
                set {
                    this[this.tableCharacter.GAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int GB {
                get {
                    return ((int)(this[this.tableCharacter.GBColumn]));
                }
                set {
                    this[this.tableCharacter.GBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int GC {
                get {
                    return ((int)(this[this.tableCharacter.GCColumn]));
                }
                set {
                    this[this.tableCharacter.GCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int GD {
                get {
                    return ((int)(this[this.tableCharacter.GDColumn]));
                }
                set {
                    this[this.tableCharacter.GDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int GE {
                get {
                    return ((int)(this[this.tableCharacter.GEColumn]));
                }
                set {
                    this[this.tableCharacter.GEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int GF {
                get {
                    return ((int)(this[this.tableCharacter.GFColumn]));
                }
                set {
                    this[this.tableCharacter.GFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int GG {
                get {
                    return ((int)(this[this.tableCharacter.GGColumn]));
                }
                set {
                    this[this.tableCharacter.GGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int GH {
                get {
                    return ((int)(this[this.tableCharacter.GHColumn]));
                }
                set {
                    this[this.tableCharacter.GHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int G {
                get {
                    return ((int)(this[this.tableCharacter.GColumn]));
                }
                set {
                    this[this.tableCharacter.GColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DA {
                get {
                    return ((int)(this[this.tableCharacter.DAColumn]));
                }
                set {
                    this[this.tableCharacter.DAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DB {
                get {
                    return ((int)(this[this.tableCharacter.DBColumn]));
                }
                set {
                    this[this.tableCharacter.DBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DC {
                get {
                    return ((int)(this[this.tableCharacter.DCColumn]));
                }
                set {
                    this[this.tableCharacter.DCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DD {
                get {
                    return ((int)(this[this.tableCharacter.DDColumn]));
                }
                set {
                    this[this.tableCharacter.DDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DE {
                get {
                    return ((int)(this[this.tableCharacter.DEColumn]));
                }
                set {
                    this[this.tableCharacter.DEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DF {
                get {
                    return ((int)(this[this.tableCharacter.DFColumn]));
                }
                set {
                    this[this.tableCharacter.DFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DG {
                get {
                    return ((int)(this[this.tableCharacter.DGColumn]));
                }
                set {
                    this[this.tableCharacter.DGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DH {
                get {
                    return ((int)(this[this.tableCharacter.DHColumn]));
                }
                set {
                    this[this.tableCharacter.DHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int D {
                get {
                    return ((int)(this[this.tableCharacter.DColumn]));
                }
                set {
                    this[this.tableCharacter.DColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int HA {
                get {
                    return ((int)(this[this.tableCharacter.HAColumn]));
                }
                set {
                    this[this.tableCharacter.HAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int HB {
                get {
                    return ((int)(this[this.tableCharacter.HBColumn]));
                }
                set {
                    this[this.tableCharacter.HBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int HC {
                get {
                    return ((int)(this[this.tableCharacter.HCColumn]));
                }
                set {
                    this[this.tableCharacter.HCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int HD {
                get {
                    return ((int)(this[this.tableCharacter.HDColumn]));
                }
                set {
                    this[this.tableCharacter.HDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int HE {
                get {
                    return ((int)(this[this.tableCharacter.HEColumn]));
                }
                set {
                    this[this.tableCharacter.HEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int HF {
                get {
                    return ((int)(this[this.tableCharacter.HFColumn]));
                }
                set {
                    this[this.tableCharacter.HFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int HG {
                get {
                    return ((int)(this[this.tableCharacter.HGColumn]));
                }
                set {
                    this[this.tableCharacter.HGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int HH {
                get {
                    return ((int)(this[this.tableCharacter.HHColumn]));
                }
                set {
                    this[this.tableCharacter.HHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int H {
                get {
                    return ((int)(this[this.tableCharacter.HColumn]));
                }
                set {
                    this[this.tableCharacter.HColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EmployeeID {
                get {
                    return ((int)(this[this.tableCharacter.EmployeeIDColumn]));
                }
                set {
                    this[this.tableCharacter.EmployeeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmployeeRow EmployeeRow {
                get {
                    return ((EmployeeRow)(this.GetParentRow(this.Table.ParentRelations["FK_dbo.Character_dbo.Employee_EmployeeID"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_dbo.Character_dbo.Employee_EmployeeID"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EmployeeRow : global::System.Data.DataRow {
            
            private EmployeeDataTable tableEmployee;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EmployeeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEmployee = ((EmployeeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EmployeeID {
                get {
                    return ((int)(this[this.tableEmployee.EmployeeIDColumn]));
                }
                set {
                    this[this.tableEmployee.EmployeeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FirstName {
                get {
                    return ((string)(this[this.tableEmployee.FirstNameColumn]));
                }
                set {
                    this[this.tableEmployee.FirstNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LastName {
                get {
                    return ((string)(this[this.tableEmployee.LastNameColumn]));
                }
                set {
                    this[this.tableEmployee.LastNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EnetrDate {
                get {
                    return ((string)(this[this.tableEmployee.EnetrDateColumn]));
                }
                set {
                    this[this.tableEmployee.EnetrDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NameFather {
                get {
                    return ((string)(this[this.tableEmployee.NameFatherColumn]));
                }
                set {
                    this[this.tableEmployee.NameFatherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BirthDate {
                get {
                    try {
                        return ((string)(this[this.tableEmployee.BirthDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BirthDate\' in table \'Employee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmployee.BirthDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BirthCertificateNumber {
                get {
                    return ((string)(this[this.tableEmployee.BirthCertificateNumberColumn]));
                }
                set {
                    this[this.tableEmployee.BirthCertificateNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NationalCode {
                get {
                    return ((string)(this[this.tableEmployee.NationalCodeColumn]));
                }
                set {
                    this[this.tableEmployee.NationalCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HomeTell {
                get {
                    return ((string)(this[this.tableEmployee.HomeTellColumn]));
                }
                set {
                    this[this.tableEmployee.HomeTellColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MobileTell {
                get {
                    return ((string)(this[this.tableEmployee.MobileTellColumn]));
                }
                set {
                    this[this.tableEmployee.MobileTellColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HomeAddress {
                get {
                    return ((string)(this[this.tableEmployee.HomeAddressColumn]));
                }
                set {
                    this[this.tableEmployee.HomeAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OfficeAddress {
                get {
                    return ((string)(this[this.tableEmployee.OfficeAddressColumn]));
                }
                set {
                    this[this.tableEmployee.OfficeAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TheCompanyJobs {
                get {
                    return ((string)(this[this.tableEmployee.TheCompanyJobsColumn]));
                }
                set {
                    this[this.tableEmployee.TheCompanyJobsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Province {
                get {
                    return ((string)(this[this.tableEmployee.ProvinceColumn]));
                }
                set {
                    this[this.tableEmployee.ProvinceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBirthDateNull() {
                return this.IsNull(this.tableEmployee.BirthDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBirthDateNull() {
                this[this.tableEmployee.BirthDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CharacterRow[] GetCharacterRows() {
                if ((this.Table.ChildRelations["FK_dbo.Character_dbo.Employee_EmployeeID"] == null)) {
                    return new CharacterRow[0];
                }
                else {
                    return ((CharacterRow[])(base.GetChildRows(this.Table.ChildRelations["FK_dbo.Character_dbo.Employee_EmployeeID"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NeoRow[] GetNeoRows() {
                if ((this.Table.ChildRelations["FK_dbo.Neo_dbo.Employee_EmployeeID"] == null)) {
                    return new NeoRow[0];
                }
                else {
                    return ((NeoRow[])(base.GetChildRows(this.Table.ChildRelations["FK_dbo.Neo_dbo.Employee_EmployeeID"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StatussRow[] GetStatussRows() {
                if ((this.Table.ChildRelations["FK_dbo.Statuss_dbo.Employee_EmployeeID"] == null)) {
                    return new StatussRow[0];
                }
                else {
                    return ((StatussRow[])(base.GetChildRows(this.Table.ChildRelations["FK_dbo.Statuss_dbo.Employee_EmployeeID"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class NeoRow : global::System.Data.DataRow {
            
            private NeoDataTable tableNeo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal NeoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableNeo = ((NeoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NeoID {
                get {
                    return ((int)(this[this.tableNeo.NeoIDColumn]));
                }
                set {
                    this[this.tableNeo.NeoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NA {
                get {
                    return ((int)(this[this.tableNeo.NAColumn]));
                }
                set {
                    this[this.tableNeo.NAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NB {
                get {
                    return ((int)(this[this.tableNeo.NBColumn]));
                }
                set {
                    this[this.tableNeo.NBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NC {
                get {
                    return ((int)(this[this.tableNeo.NCColumn]));
                }
                set {
                    this[this.tableNeo.NCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ND {
                get {
                    return ((int)(this[this.tableNeo.NDColumn]));
                }
                set {
                    this[this.tableNeo.NDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NE {
                get {
                    return ((int)(this[this.tableNeo.NEColumn]));
                }
                set {
                    this[this.tableNeo.NEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NF {
                get {
                    return ((int)(this[this.tableNeo.NFColumn]));
                }
                set {
                    this[this.tableNeo.NFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NG {
                get {
                    return ((int)(this[this.tableNeo.NGColumn]));
                }
                set {
                    this[this.tableNeo.NGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NH {
                get {
                    return ((int)(this[this.tableNeo.NHColumn]));
                }
                set {
                    this[this.tableNeo.NHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NI {
                get {
                    return ((int)(this[this.tableNeo.NIColumn]));
                }
                set {
                    this[this.tableNeo.NIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NJ {
                get {
                    return ((int)(this[this.tableNeo.NJColumn]));
                }
                set {
                    this[this.tableNeo.NJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NK {
                get {
                    return ((int)(this[this.tableNeo.NKColumn]));
                }
                set {
                    this[this.tableNeo.NKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NN {
                get {
                    return ((int)(this[this.tableNeo.NNColumn]));
                }
                set {
                    this[this.tableNeo.NNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int N {
                get {
                    return ((int)(this[this.tableNeo.NColumn]));
                }
                set {
                    this[this.tableNeo.NColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EA {
                get {
                    return ((int)(this[this.tableNeo.EAColumn]));
                }
                set {
                    this[this.tableNeo.EAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EB {
                get {
                    return ((int)(this[this.tableNeo.EBColumn]));
                }
                set {
                    this[this.tableNeo.EBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EC {
                get {
                    return ((int)(this[this.tableNeo.ECColumn]));
                }
                set {
                    this[this.tableNeo.ECColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ED {
                get {
                    return ((int)(this[this.tableNeo.EDColumn]));
                }
                set {
                    this[this.tableNeo.EDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EE {
                get {
                    return ((int)(this[this.tableNeo.EEColumn]));
                }
                set {
                    this[this.tableNeo.EEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EF {
                get {
                    return ((int)(this[this.tableNeo.EFColumn]));
                }
                set {
                    this[this.tableNeo.EFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EG {
                get {
                    return ((int)(this[this.tableNeo.EGColumn]));
                }
                set {
                    this[this.tableNeo.EGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EH {
                get {
                    return ((int)(this[this.tableNeo.EHColumn]));
                }
                set {
                    this[this.tableNeo.EHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EI {
                get {
                    return ((int)(this[this.tableNeo.EIColumn]));
                }
                set {
                    this[this.tableNeo.EIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EJ {
                get {
                    return ((int)(this[this.tableNeo.EJColumn]));
                }
                set {
                    this[this.tableNeo.EJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EK {
                get {
                    return ((int)(this[this.tableNeo.EKColumn]));
                }
                set {
                    this[this.tableNeo.EKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EN {
                get {
                    return ((int)(this[this.tableNeo.ENColumn]));
                }
                set {
                    this[this.tableNeo.ENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int E {
                get {
                    return ((int)(this[this.tableNeo.EColumn]));
                }
                set {
                    this[this.tableNeo.EColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OA {
                get {
                    return ((int)(this[this.tableNeo.OAColumn]));
                }
                set {
                    this[this.tableNeo.OAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OB {
                get {
                    return ((int)(this[this.tableNeo.OBColumn]));
                }
                set {
                    this[this.tableNeo.OBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OC {
                get {
                    return ((int)(this[this.tableNeo.OCColumn]));
                }
                set {
                    this[this.tableNeo.OCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OD {
                get {
                    return ((int)(this[this.tableNeo.ODColumn]));
                }
                set {
                    this[this.tableNeo.ODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OE {
                get {
                    return ((int)(this[this.tableNeo.OEColumn]));
                }
                set {
                    this[this.tableNeo.OEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OF {
                get {
                    return ((int)(this[this.tableNeo.OFColumn]));
                }
                set {
                    this[this.tableNeo.OFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OG {
                get {
                    return ((int)(this[this.tableNeo.OGColumn]));
                }
                set {
                    this[this.tableNeo.OGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OH {
                get {
                    return ((int)(this[this.tableNeo.OHColumn]));
                }
                set {
                    this[this.tableNeo.OHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OI {
                get {
                    return ((int)(this[this.tableNeo.OIColumn]));
                }
                set {
                    this[this.tableNeo.OIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OJ {
                get {
                    return ((int)(this[this.tableNeo.OJColumn]));
                }
                set {
                    this[this.tableNeo.OJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OK {
                get {
                    return ((int)(this[this.tableNeo.OKColumn]));
                }
                set {
                    this[this.tableNeo.OKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ON {
                get {
                    return ((int)(this[this.tableNeo.ONColumn]));
                }
                set {
                    this[this.tableNeo.ONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int O {
                get {
                    return ((int)(this[this.tableNeo.OColumn]));
                }
                set {
                    this[this.tableNeo.OColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AA {
                get {
                    return ((int)(this[this.tableNeo.AAColumn]));
                }
                set {
                    this[this.tableNeo.AAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AB {
                get {
                    return ((int)(this[this.tableNeo.ABColumn]));
                }
                set {
                    this[this.tableNeo.ABColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AC {
                get {
                    return ((int)(this[this.tableNeo.ACColumn]));
                }
                set {
                    this[this.tableNeo.ACColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AD {
                get {
                    return ((int)(this[this.tableNeo.ADColumn]));
                }
                set {
                    this[this.tableNeo.ADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AE {
                get {
                    return ((int)(this[this.tableNeo.AEColumn]));
                }
                set {
                    this[this.tableNeo.AEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AF {
                get {
                    return ((int)(this[this.tableNeo.AFColumn]));
                }
                set {
                    this[this.tableNeo.AFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AG {
                get {
                    return ((int)(this[this.tableNeo.AGColumn]));
                }
                set {
                    this[this.tableNeo.AGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AH {
                get {
                    return ((int)(this[this.tableNeo.AHColumn]));
                }
                set {
                    this[this.tableNeo.AHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AI {
                get {
                    return ((int)(this[this.tableNeo.AIColumn]));
                }
                set {
                    this[this.tableNeo.AIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AJ {
                get {
                    return ((int)(this[this.tableNeo.AJColumn]));
                }
                set {
                    this[this.tableNeo.AJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AK {
                get {
                    return ((int)(this[this.tableNeo.AKColumn]));
                }
                set {
                    this[this.tableNeo.AKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AN {
                get {
                    return ((int)(this[this.tableNeo.ANColumn]));
                }
                set {
                    this[this.tableNeo.ANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int A {
                get {
                    return ((int)(this[this.tableNeo.AColumn]));
                }
                set {
                    this[this.tableNeo.AColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CA {
                get {
                    return ((int)(this[this.tableNeo.CAColumn]));
                }
                set {
                    this[this.tableNeo.CAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CB {
                get {
                    return ((int)(this[this.tableNeo.CBColumn]));
                }
                set {
                    this[this.tableNeo.CBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CC {
                get {
                    return ((int)(this[this.tableNeo.CCColumn]));
                }
                set {
                    this[this.tableNeo.CCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CD {
                get {
                    return ((int)(this[this.tableNeo.CDColumn]));
                }
                set {
                    this[this.tableNeo.CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CE {
                get {
                    return ((int)(this[this.tableNeo.CEColumn]));
                }
                set {
                    this[this.tableNeo.CEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CF {
                get {
                    return ((int)(this[this.tableNeo.CFColumn]));
                }
                set {
                    this[this.tableNeo.CFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CG {
                get {
                    return ((int)(this[this.tableNeo.CGColumn]));
                }
                set {
                    this[this.tableNeo.CGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CH {
                get {
                    return ((int)(this[this.tableNeo.CHColumn]));
                }
                set {
                    this[this.tableNeo.CHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CI {
                get {
                    return ((int)(this[this.tableNeo.CIColumn]));
                }
                set {
                    this[this.tableNeo.CIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CJ {
                get {
                    return ((int)(this[this.tableNeo.CJColumn]));
                }
                set {
                    this[this.tableNeo.CJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CK {
                get {
                    return ((int)(this[this.tableNeo.CKColumn]));
                }
                set {
                    this[this.tableNeo.CKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CN {
                get {
                    return ((int)(this[this.tableNeo.CNColumn]));
                }
                set {
                    this[this.tableNeo.CNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int C {
                get {
                    return ((int)(this[this.tableNeo.CColumn]));
                }
                set {
                    this[this.tableNeo.CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EmployeeID {
                get {
                    return ((int)(this[this.tableNeo.EmployeeIDColumn]));
                }
                set {
                    this[this.tableNeo.EmployeeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmployeeRow EmployeeRow {
                get {
                    return ((EmployeeRow)(this.GetParentRow(this.Table.ParentRelations["FK_dbo.Neo_dbo.Employee_EmployeeID"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_dbo.Neo_dbo.Employee_EmployeeID"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class StatussRow : global::System.Data.DataRow {
            
            private StatussDataTable tableStatuss;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StatussRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStatuss = ((StatussDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int StatussID {
                get {
                    return ((int)(this[this.tableStatuss.StatussIDColumn]));
                }
                set {
                    this[this.tableStatuss.StatussIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Status {
                get {
                    return ((bool)(this[this.tableStatuss.StatusColumn]));
                }
                set {
                    this[this.tableStatuss.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool NumberSend {
                get {
                    return ((bool)(this[this.tableStatuss.NumberSendColumn]));
                }
                set {
                    this[this.tableStatuss.NumberSendColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Attach {
                get {
                    return ((bool)(this[this.tableStatuss.AttachColumn]));
                }
                set {
                    this[this.tableStatuss.AttachColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EmployeeID {
                get {
                    return ((int)(this[this.tableStatuss.EmployeeIDColumn]));
                }
                set {
                    this[this.tableStatuss.EmployeeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmployeeRow EmployeeRow {
                get {
                    return ((EmployeeRow)(this.GetParentRow(this.Table.ParentRelations["FK_dbo.Statuss_dbo.Employee_EmployeeID"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_dbo.Statuss_dbo.Employee_EmployeeID"]);
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class CharacterRowChangeEvent : global::System.EventArgs {
            
            private CharacterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CharacterRowChangeEvent(CharacterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CharacterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EmployeeRowChangeEvent : global::System.EventArgs {
            
            private EmployeeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmployeeRowChangeEvent(EmployeeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmployeeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class NeoRowChangeEvent : global::System.EventArgs {
            
            private NeoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NeoRowChangeEvent(NeoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NeoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class StatussRowChangeEvent : global::System.EventArgs {
            
            private StatussRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StatussRowChangeEvent(StatussRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StatussRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace ManagerEmployeeNeoCharacter.ManagerEmployeeNeoCharacterDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CharacterTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CharacterTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Character";
            tableMapping.ColumnMappings.Add("CharacterID", "CharacterID");
            tableMapping.ColumnMappings.Add("AA", "AA");
            tableMapping.ColumnMappings.Add("AB", "AB");
            tableMapping.ColumnMappings.Add("AC", "AC");
            tableMapping.ColumnMappings.Add("AD", "AD");
            tableMapping.ColumnMappings.Add("AE", "AE");
            tableMapping.ColumnMappings.Add("AF", "AF");
            tableMapping.ColumnMappings.Add("AG", "AG");
            tableMapping.ColumnMappings.Add("AH", "AH");
            tableMapping.ColumnMappings.Add("A", "A");
            tableMapping.ColumnMappings.Add("BA", "BA");
            tableMapping.ColumnMappings.Add("BB", "BB");
            tableMapping.ColumnMappings.Add("BC", "BC");
            tableMapping.ColumnMappings.Add("BD", "BD");
            tableMapping.ColumnMappings.Add("BE", "BE");
            tableMapping.ColumnMappings.Add("BF", "BF");
            tableMapping.ColumnMappings.Add("BG", "BG");
            tableMapping.ColumnMappings.Add("BH", "BH");
            tableMapping.ColumnMappings.Add("B", "B");
            tableMapping.ColumnMappings.Add("GA", "GA");
            tableMapping.ColumnMappings.Add("GB", "GB");
            tableMapping.ColumnMappings.Add("GC", "GC");
            tableMapping.ColumnMappings.Add("GD", "GD");
            tableMapping.ColumnMappings.Add("GE", "GE");
            tableMapping.ColumnMappings.Add("GF", "GF");
            tableMapping.ColumnMappings.Add("GG", "GG");
            tableMapping.ColumnMappings.Add("GH", "GH");
            tableMapping.ColumnMappings.Add("G", "G");
            tableMapping.ColumnMappings.Add("DA", "DA");
            tableMapping.ColumnMappings.Add("DB", "DB");
            tableMapping.ColumnMappings.Add("DC", "DC");
            tableMapping.ColumnMappings.Add("DD", "DD");
            tableMapping.ColumnMappings.Add("DE", "DE");
            tableMapping.ColumnMappings.Add("DF", "DF");
            tableMapping.ColumnMappings.Add("DG", "DG");
            tableMapping.ColumnMappings.Add("DH", "DH");
            tableMapping.ColumnMappings.Add("D", "D");
            tableMapping.ColumnMappings.Add("HA", "HA");
            tableMapping.ColumnMappings.Add("HB", "HB");
            tableMapping.ColumnMappings.Add("HC", "HC");
            tableMapping.ColumnMappings.Add("HD", "HD");
            tableMapping.ColumnMappings.Add("HE", "HE");
            tableMapping.ColumnMappings.Add("HF", "HF");
            tableMapping.ColumnMappings.Add("HG", "HG");
            tableMapping.ColumnMappings.Add("HH", "HH");
            tableMapping.ColumnMappings.Add("H", "H");
            tableMapping.ColumnMappings.Add("EmployeeID", "EmployeeID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Character] WHERE (([CharacterID] = @Original_CharacterID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CharacterID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CharacterID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Character] ([AA], [AB], [AC], [AD], [AE], [AF], [AG], [AH], [A], [BA], [BB], [BC], [BD], [BE], [BF], [BG], [BH], [B], [GA], [GB], [GC], [GD], [GE], [GF], [GG], [GH], [G], [DA], [DB], [DC], [DD], [DE], [DF], [DG], [DH], [D], [HA], [HB], [HC], [HD], [HE], [HF], [HG], [HH], [H], [EmployeeID]) VALUES (@AA, @AB, @AC, @AD, @AE, @AF, @AG, @AH, @A, @BA, @BB, @BC, @BD, @BE, @BF, @BG, @BH, @B, @GA, @GB, @GC, @GD, @GE, @GF, @GG, @GH, @G, @DA, @DB, @DC, @DD, @DE, @DF, @DG, @DH, @D, @HA, @HB, @HC, @HD, @HE, @HF, @HG, @HH, @H, @EmployeeID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@G", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@D", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@H", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "H", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Character] SET [AA] = @AA, [AB] = @AB, [AC] = @AC, [AD] = @AD, [AE] = @AE, [AF] = @AF, [AG] = @AG, [AH] = @AH, [A] = @A, [BA] = @BA, [BB] = @BB, [BC] = @BC, [BD] = @BD, [BE] = @BE, [BF] = @BF, [BG] = @BG, [BH] = @BH, [B] = @B, [GA] = @GA, [GB] = @GB, [GC] = @GC, [GD] = @GD, [GE] = @GE, [GF] = @GF, [GG] = @GG, [GH] = @GH, [G] = @G, [DA] = @DA, [DB] = @DB, [DC] = @DC, [DD] = @DD, [DE] = @DE, [DF] = @DF, [DG] = @DG, [DH] = @DH, [D] = @D, [HA] = @HA, [HB] = @HB, [HC] = @HC, [HD] = @HD, [HE] = @HE, [HF] = @HF, [HG] = @HG, [HH] = @HH, [H] = @H, [EmployeeID] = @EmployeeID WHERE (([CharacterID] = @Original_CharacterID))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "B", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@G", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "G", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@D", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@H", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "H", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CharacterID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CharacterID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ManagerEmployeeNeoCharacterContext"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CharacterID, AA, AB, AC, AD, AE, AF, AG, AH, A, BA, BB, BC, BD, BE, BF, BG" +
                ", BH, B, GA, GB, GC, GD, GE, GF, GG, GH, G, DA, DB, DC, DD, DE, DF, DG, DH, D, H" +
                "A, HB, HC, HD, HE, HF, HG, HH, H, EmployeeID FROM dbo.Character";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ManagerEmployeeNeoCharacterDataSet.CharacterDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ManagerEmployeeNeoCharacterDataSet.CharacterDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ManagerEmployeeNeoCharacterDataSet.CharacterDataTable dataTable = new ManagerEmployeeNeoCharacterDataSet.CharacterDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ManagerEmployeeNeoCharacterDataSet.CharacterDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ManagerEmployeeNeoCharacterDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Character");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_CharacterID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_CharacterID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int AA, 
                    int AB, 
                    int AC, 
                    int AD, 
                    int AE, 
                    int AF, 
                    int AG, 
                    int AH, 
                    int A, 
                    int BA, 
                    int BB, 
                    int BC, 
                    int BD, 
                    int BE, 
                    int BF, 
                    int BG, 
                    int BH, 
                    int B, 
                    int GA, 
                    int GB, 
                    int GC, 
                    int GD, 
                    int GE, 
                    int GF, 
                    int GG, 
                    int GH, 
                    int G, 
                    int DA, 
                    int DB, 
                    int DC, 
                    int DD, 
                    int DE, 
                    int DF, 
                    int DG, 
                    int DH, 
                    int D, 
                    int HA, 
                    int HB, 
                    int HC, 
                    int HD, 
                    int HE, 
                    int HF, 
                    int HG, 
                    int HH, 
                    int H, 
                    int EmployeeID) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(AA));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(AB));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(AC));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(AD));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(AE));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(AF));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(AG));
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(AH));
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(A));
            this.Adapter.InsertCommand.Parameters[9].Value = ((int)(BA));
            this.Adapter.InsertCommand.Parameters[10].Value = ((int)(BB));
            this.Adapter.InsertCommand.Parameters[11].Value = ((int)(BC));
            this.Adapter.InsertCommand.Parameters[12].Value = ((int)(BD));
            this.Adapter.InsertCommand.Parameters[13].Value = ((int)(BE));
            this.Adapter.InsertCommand.Parameters[14].Value = ((int)(BF));
            this.Adapter.InsertCommand.Parameters[15].Value = ((int)(BG));
            this.Adapter.InsertCommand.Parameters[16].Value = ((int)(BH));
            this.Adapter.InsertCommand.Parameters[17].Value = ((int)(B));
            this.Adapter.InsertCommand.Parameters[18].Value = ((int)(GA));
            this.Adapter.InsertCommand.Parameters[19].Value = ((int)(GB));
            this.Adapter.InsertCommand.Parameters[20].Value = ((int)(GC));
            this.Adapter.InsertCommand.Parameters[21].Value = ((int)(GD));
            this.Adapter.InsertCommand.Parameters[22].Value = ((int)(GE));
            this.Adapter.InsertCommand.Parameters[23].Value = ((int)(GF));
            this.Adapter.InsertCommand.Parameters[24].Value = ((int)(GG));
            this.Adapter.InsertCommand.Parameters[25].Value = ((int)(GH));
            this.Adapter.InsertCommand.Parameters[26].Value = ((int)(G));
            this.Adapter.InsertCommand.Parameters[27].Value = ((int)(DA));
            this.Adapter.InsertCommand.Parameters[28].Value = ((int)(DB));
            this.Adapter.InsertCommand.Parameters[29].Value = ((int)(DC));
            this.Adapter.InsertCommand.Parameters[30].Value = ((int)(DD));
            this.Adapter.InsertCommand.Parameters[31].Value = ((int)(DE));
            this.Adapter.InsertCommand.Parameters[32].Value = ((int)(DF));
            this.Adapter.InsertCommand.Parameters[33].Value = ((int)(DG));
            this.Adapter.InsertCommand.Parameters[34].Value = ((int)(DH));
            this.Adapter.InsertCommand.Parameters[35].Value = ((int)(D));
            this.Adapter.InsertCommand.Parameters[36].Value = ((int)(HA));
            this.Adapter.InsertCommand.Parameters[37].Value = ((int)(HB));
            this.Adapter.InsertCommand.Parameters[38].Value = ((int)(HC));
            this.Adapter.InsertCommand.Parameters[39].Value = ((int)(HD));
            this.Adapter.InsertCommand.Parameters[40].Value = ((int)(HE));
            this.Adapter.InsertCommand.Parameters[41].Value = ((int)(HF));
            this.Adapter.InsertCommand.Parameters[42].Value = ((int)(HG));
            this.Adapter.InsertCommand.Parameters[43].Value = ((int)(HH));
            this.Adapter.InsertCommand.Parameters[44].Value = ((int)(H));
            this.Adapter.InsertCommand.Parameters[45].Value = ((int)(EmployeeID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int AA, 
                    int AB, 
                    int AC, 
                    int AD, 
                    int AE, 
                    int AF, 
                    int AG, 
                    int AH, 
                    int A, 
                    int BA, 
                    int BB, 
                    int BC, 
                    int BD, 
                    int BE, 
                    int BF, 
                    int BG, 
                    int BH, 
                    int B, 
                    int GA, 
                    int GB, 
                    int GC, 
                    int GD, 
                    int GE, 
                    int GF, 
                    int GG, 
                    int GH, 
                    int G, 
                    int DA, 
                    int DB, 
                    int DC, 
                    int DD, 
                    int DE, 
                    int DF, 
                    int DG, 
                    int DH, 
                    int D, 
                    int HA, 
                    int HB, 
                    int HC, 
                    int HD, 
                    int HE, 
                    int HF, 
                    int HG, 
                    int HH, 
                    int H, 
                    int EmployeeID, 
                    int Original_CharacterID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(AA));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(AB));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(AC));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(AD));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(AE));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(AF));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(AG));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(AH));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(A));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(BA));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(BB));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(BC));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(BD));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(BE));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(BF));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(BG));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(BH));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(B));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(GA));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(GB));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(GC));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(GD));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(GE));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(GF));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(GG));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(GH));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(G));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(DA));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(DB));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(DC));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(DD));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(DE));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(DF));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((int)(DG));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(DH));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((int)(D));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(HA));
            this.Adapter.UpdateCommand.Parameters[37].Value = ((int)(HB));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(HC));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((int)(HD));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((int)(HE));
            this.Adapter.UpdateCommand.Parameters[41].Value = ((int)(HF));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((int)(HG));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(HH));
            this.Adapter.UpdateCommand.Parameters[44].Value = ((int)(H));
            this.Adapter.UpdateCommand.Parameters[45].Value = ((int)(EmployeeID));
            this.Adapter.UpdateCommand.Parameters[46].Value = ((int)(Original_CharacterID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class EmployeeTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public EmployeeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Employee";
            tableMapping.ColumnMappings.Add("EmployeeID", "EmployeeID");
            tableMapping.ColumnMappings.Add("FirstName", "FirstName");
            tableMapping.ColumnMappings.Add("LastName", "LastName");
            tableMapping.ColumnMappings.Add("EnetrDate", "EnetrDate");
            tableMapping.ColumnMappings.Add("NameFather", "NameFather");
            tableMapping.ColumnMappings.Add("BirthDate", "BirthDate");
            tableMapping.ColumnMappings.Add("BirthCertificateNumber", "BirthCertificateNumber");
            tableMapping.ColumnMappings.Add("NationalCode", "NationalCode");
            tableMapping.ColumnMappings.Add("HomeTell", "HomeTell");
            tableMapping.ColumnMappings.Add("MobileTell", "MobileTell");
            tableMapping.ColumnMappings.Add("HomeAddress", "HomeAddress");
            tableMapping.ColumnMappings.Add("OfficeAddress", "OfficeAddress");
            tableMapping.ColumnMappings.Add("TheCompanyJobs", "TheCompanyJobs");
            tableMapping.ColumnMappings.Add("Province", "Province");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Employee] WHERE (([EmployeeID] = @Original_EmployeeID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmployeeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Employee] ([FirstName], [LastName], [EnetrDate], [NameFather], [BirthDate], [BirthCertificateNumber], [NationalCode], [HomeTell], [MobileTell], [HomeAddress], [OfficeAddress], [TheCompanyJobs], [Province]) VALUES (@FirstName, @LastName, @EnetrDate, @NameFather, @BirthDate, @BirthCertificateNumber, @NationalCode, @HomeTell, @MobileTell, @HomeAddress, @OfficeAddress, @TheCompanyJobs, @Province)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FirstName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnetrDate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnetrDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NameFather", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NameFather", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BirthDate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BirthDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BirthCertificateNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BirthCertificateNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NationalCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NationalCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HomeTell", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HomeTell", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MobileTell", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MobileTell", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HomeAddress", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HomeAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OfficeAddress", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OfficeAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TheCompanyJobs", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TheCompanyJobs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Province", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Province", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Employee] SET [FirstName] = @FirstName, [LastName] = @LastName, [EnetrDate] = @EnetrDate, [NameFather] = @NameFather, [BirthDate] = @BirthDate, [BirthCertificateNumber] = @BirthCertificateNumber, [NationalCode] = @NationalCode, [HomeTell] = @HomeTell, [MobileTell] = @MobileTell, [HomeAddress] = @HomeAddress, [OfficeAddress] = @OfficeAddress, [TheCompanyJobs] = @TheCompanyJobs, [Province] = @Province WHERE (([EmployeeID] = @Original_EmployeeID))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FirstName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnetrDate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnetrDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NameFather", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NameFather", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BirthDate", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BirthDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BirthCertificateNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BirthCertificateNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NationalCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NationalCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HomeTell", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HomeTell", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MobileTell", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MobileTell", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HomeAddress", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HomeAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OfficeAddress", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OfficeAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TheCompanyJobs", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TheCompanyJobs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Province", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Province", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmployeeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ManagerEmployeeNeoCharacterContext"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT EmployeeID, FirstName, LastName, EnetrDate, NameFather, BirthDate, BirthCe" +
                "rtificateNumber, NationalCode, HomeTell, MobileTell, HomeAddress, OfficeAddress," +
                " TheCompanyJobs, Province FROM dbo.Employee";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ManagerEmployeeNeoCharacterDataSet.EmployeeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ManagerEmployeeNeoCharacterDataSet.EmployeeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ManagerEmployeeNeoCharacterDataSet.EmployeeDataTable dataTable = new ManagerEmployeeNeoCharacterDataSet.EmployeeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ManagerEmployeeNeoCharacterDataSet.EmployeeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ManagerEmployeeNeoCharacterDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Employee");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_EmployeeID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_EmployeeID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string FirstName, string LastName, string EnetrDate, string NameFather, string BirthDate, string BirthCertificateNumber, string NationalCode, string HomeTell, string MobileTell, string HomeAddress, string OfficeAddress, string TheCompanyJobs, string Province) {
            if ((FirstName == null)) {
                throw new global::System.ArgumentNullException("FirstName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(FirstName));
            }
            if ((LastName == null)) {
                throw new global::System.ArgumentNullException("LastName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(LastName));
            }
            if ((EnetrDate == null)) {
                throw new global::System.ArgumentNullException("EnetrDate");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(EnetrDate));
            }
            if ((NameFather == null)) {
                throw new global::System.ArgumentNullException("NameFather");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(NameFather));
            }
            if ((BirthDate == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(BirthDate));
            }
            if ((BirthCertificateNumber == null)) {
                throw new global::System.ArgumentNullException("BirthCertificateNumber");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(BirthCertificateNumber));
            }
            if ((NationalCode == null)) {
                throw new global::System.ArgumentNullException("NationalCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(NationalCode));
            }
            if ((HomeTell == null)) {
                throw new global::System.ArgumentNullException("HomeTell");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(HomeTell));
            }
            if ((MobileTell == null)) {
                throw new global::System.ArgumentNullException("MobileTell");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(MobileTell));
            }
            if ((HomeAddress == null)) {
                throw new global::System.ArgumentNullException("HomeAddress");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(HomeAddress));
            }
            if ((OfficeAddress == null)) {
                throw new global::System.ArgumentNullException("OfficeAddress");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(OfficeAddress));
            }
            if ((TheCompanyJobs == null)) {
                throw new global::System.ArgumentNullException("TheCompanyJobs");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(TheCompanyJobs));
            }
            if ((Province == null)) {
                throw new global::System.ArgumentNullException("Province");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(Province));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string FirstName, string LastName, string EnetrDate, string NameFather, string BirthDate, string BirthCertificateNumber, string NationalCode, string HomeTell, string MobileTell, string HomeAddress, string OfficeAddress, string TheCompanyJobs, string Province, int Original_EmployeeID) {
            if ((FirstName == null)) {
                throw new global::System.ArgumentNullException("FirstName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(FirstName));
            }
            if ((LastName == null)) {
                throw new global::System.ArgumentNullException("LastName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(LastName));
            }
            if ((EnetrDate == null)) {
                throw new global::System.ArgumentNullException("EnetrDate");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(EnetrDate));
            }
            if ((NameFather == null)) {
                throw new global::System.ArgumentNullException("NameFather");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(NameFather));
            }
            if ((BirthDate == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(BirthDate));
            }
            if ((BirthCertificateNumber == null)) {
                throw new global::System.ArgumentNullException("BirthCertificateNumber");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(BirthCertificateNumber));
            }
            if ((NationalCode == null)) {
                throw new global::System.ArgumentNullException("NationalCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(NationalCode));
            }
            if ((HomeTell == null)) {
                throw new global::System.ArgumentNullException("HomeTell");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(HomeTell));
            }
            if ((MobileTell == null)) {
                throw new global::System.ArgumentNullException("MobileTell");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(MobileTell));
            }
            if ((HomeAddress == null)) {
                throw new global::System.ArgumentNullException("HomeAddress");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(HomeAddress));
            }
            if ((OfficeAddress == null)) {
                throw new global::System.ArgumentNullException("OfficeAddress");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(OfficeAddress));
            }
            if ((TheCompanyJobs == null)) {
                throw new global::System.ArgumentNullException("TheCompanyJobs");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(TheCompanyJobs));
            }
            if ((Province == null)) {
                throw new global::System.ArgumentNullException("Province");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Province));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_EmployeeID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class NeoTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public NeoTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Neo";
            tableMapping.ColumnMappings.Add("NeoID", "NeoID");
            tableMapping.ColumnMappings.Add("NA", "NA");
            tableMapping.ColumnMappings.Add("NB", "NB");
            tableMapping.ColumnMappings.Add("NC", "NC");
            tableMapping.ColumnMappings.Add("ND", "ND");
            tableMapping.ColumnMappings.Add("NE", "NE");
            tableMapping.ColumnMappings.Add("NF", "NF");
            tableMapping.ColumnMappings.Add("NG", "NG");
            tableMapping.ColumnMappings.Add("NH", "NH");
            tableMapping.ColumnMappings.Add("NI", "NI");
            tableMapping.ColumnMappings.Add("NJ", "NJ");
            tableMapping.ColumnMappings.Add("NK", "NK");
            tableMapping.ColumnMappings.Add("NN", "NN");
            tableMapping.ColumnMappings.Add("N", "N");
            tableMapping.ColumnMappings.Add("EA", "EA");
            tableMapping.ColumnMappings.Add("EB", "EB");
            tableMapping.ColumnMappings.Add("EC", "EC");
            tableMapping.ColumnMappings.Add("ED", "ED");
            tableMapping.ColumnMappings.Add("EE", "EE");
            tableMapping.ColumnMappings.Add("EF", "EF");
            tableMapping.ColumnMappings.Add("EG", "EG");
            tableMapping.ColumnMappings.Add("EH", "EH");
            tableMapping.ColumnMappings.Add("EI", "EI");
            tableMapping.ColumnMappings.Add("EJ", "EJ");
            tableMapping.ColumnMappings.Add("EK", "EK");
            tableMapping.ColumnMappings.Add("EN", "EN");
            tableMapping.ColumnMappings.Add("E", "E");
            tableMapping.ColumnMappings.Add("OA", "OA");
            tableMapping.ColumnMappings.Add("OB", "OB");
            tableMapping.ColumnMappings.Add("OC", "OC");
            tableMapping.ColumnMappings.Add("OD", "OD");
            tableMapping.ColumnMappings.Add("OE", "OE");
            tableMapping.ColumnMappings.Add("OF", "OF");
            tableMapping.ColumnMappings.Add("OG", "OG");
            tableMapping.ColumnMappings.Add("OH", "OH");
            tableMapping.ColumnMappings.Add("OI", "OI");
            tableMapping.ColumnMappings.Add("OJ", "OJ");
            tableMapping.ColumnMappings.Add("OK", "OK");
            tableMapping.ColumnMappings.Add("ON", "ON");
            tableMapping.ColumnMappings.Add("O", "O");
            tableMapping.ColumnMappings.Add("AA", "AA");
            tableMapping.ColumnMappings.Add("AB", "AB");
            tableMapping.ColumnMappings.Add("AC", "AC");
            tableMapping.ColumnMappings.Add("AD", "AD");
            tableMapping.ColumnMappings.Add("AE", "AE");
            tableMapping.ColumnMappings.Add("AF", "AF");
            tableMapping.ColumnMappings.Add("AG", "AG");
            tableMapping.ColumnMappings.Add("AH", "AH");
            tableMapping.ColumnMappings.Add("AI", "AI");
            tableMapping.ColumnMappings.Add("AJ", "AJ");
            tableMapping.ColumnMappings.Add("AK", "AK");
            tableMapping.ColumnMappings.Add("AN", "AN");
            tableMapping.ColumnMappings.Add("A", "A");
            tableMapping.ColumnMappings.Add("CA", "CA");
            tableMapping.ColumnMappings.Add("CB", "CB");
            tableMapping.ColumnMappings.Add("CC", "CC");
            tableMapping.ColumnMappings.Add("CD", "CD");
            tableMapping.ColumnMappings.Add("CE", "CE");
            tableMapping.ColumnMappings.Add("CF", "CF");
            tableMapping.ColumnMappings.Add("CG", "CG");
            tableMapping.ColumnMappings.Add("CH", "CH");
            tableMapping.ColumnMappings.Add("CI", "CI");
            tableMapping.ColumnMappings.Add("CJ", "CJ");
            tableMapping.ColumnMappings.Add("CK", "CK");
            tableMapping.ColumnMappings.Add("CN", "CN");
            tableMapping.ColumnMappings.Add("C", "C");
            tableMapping.ColumnMappings.Add("EmployeeID", "EmployeeID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Neo] WHERE (([NeoID] = @Original_NeoID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NeoID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NeoID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Neo] ([NA], [NB], [NC], [ND], [NE], [NF], [NG], [NH], [NI], [NJ], [NK], [NN], [N], [EA], [EB], [EC], [ED], [EE], [EF], [EG], [EH], [EI], [EJ], [EK], [EN], [E], [OA], [OB], [OC], [OD], [OE], [OF], [OG], [OH], [OI], [OJ], [OK], [ON], [O], [AA], [AB], [AC], [AD], [AE], [AF], [AG], [AH], [AI], [AJ], [AK], [AN], [A], [CA], [CB], [CC], [CD], [CE], [CF], [CG], [CH], [CI], [CJ], [CK], [CN], [C], [EmployeeID]) VALUES (@NA, @NB, @NC, @ND, @NE, @NF, @NG, @NH, @NI, @NJ, @NK, @NN, @N, @EA, @EB, @EC, @ED, @EE, @EF, @EG, @EH, @EI, @EJ, @EK, @EN, @E, @OA, @OB, @OC, @OD, @OE, @OF, @OG, @OH, @OI, @OJ, @OK, @ON, @O, @AA, @AB, @AC, @AD, @AE, @AF, @AG, @AH, @AI, @AJ, @AK, @AN, @A, @CA, @CB, @CC, @CD, @CE, @CF, @CG, @CH, @CI, @CJ, @CK, @CN, @C, @EmployeeID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ND", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ND", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NJ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NJ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@N", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "N", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ED", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EJ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EJ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OJ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OJ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ON", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ON", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@O", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "O", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AJ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AJ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CJ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CJ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[NeomployeeID] = @EmployeeID WHERE (([NeoID] = @Original_NeoID))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ND", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ND", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NJ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NJ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@N", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "N", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ED", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EJ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EJ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "E", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OJ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OJ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ON", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ON", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@O", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "O", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AJ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AJ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "A", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CJ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CJ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NeoID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NeoID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ManagerEmployeeNeoCharacterContext"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT NeoID, NA, NB, NC, ND, NE, NF, NG, NH, NI, NJ, NK, NN, N, EA, EB, EC, ED, EE, EF, EG, EH, EI, EJ, EK, EN, E, OA, OB, OC, OD, OE, [OF], OG, OH, OI, OJ, OK, [ON], O, AA, AB, AC, AD, AE, AF, AG, AH, AI, AJ, AK, AN, A, CA, CB, CC, CD, CE, CF, CG, CH, CI, CJ, CK, CN, C, EmployeeID FROM dbo.Neo";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ManagerEmployeeNeoCharacterDataSet.NeoDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ManagerEmployeeNeoCharacterDataSet.NeoDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ManagerEmployeeNeoCharacterDataSet.NeoDataTable dataTable = new ManagerEmployeeNeoCharacterDataSet.NeoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ManagerEmployeeNeoCharacterDataSet.NeoDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ManagerEmployeeNeoCharacterDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Neo");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_NeoID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_NeoID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int NA, 
                    int NB, 
                    int NC, 
                    int ND, 
                    int NE, 
                    int NF, 
                    int NG, 
                    int NH, 
                    int NI, 
                    int NJ, 
                    int NK, 
                    int NN, 
                    int N, 
                    int EA, 
                    int EB, 
                    int EC, 
                    int ED, 
                    int EE, 
                    int EF, 
                    int EG, 
                    int EH, 
                    int EI, 
                    int EJ, 
                    int EK, 
                    int EN, 
                    int E, 
                    int OA, 
                    int OB, 
                    int OC, 
                    int OD, 
                    int OE, 
                    int OF, 
                    int OG, 
                    int OH, 
                    int OI, 
                    int OJ, 
                    int OK, 
                    int ON, 
                    int O, 
                    int AA, 
                    int AB, 
                    int AC, 
                    int AD, 
                    int AE, 
                    int AF, 
                    int AG, 
                    int AH, 
                    int AI, 
                    int AJ, 
                    int AK, 
                    int AN, 
                    int A, 
                    int CA, 
                    int CB, 
                    int CC, 
                    int CD, 
                    int CE, 
                    int CF, 
                    int CG, 
                    int CH, 
                    int CI, 
                    int CJ, 
                    int CK, 
                    int CN, 
                    int C, 
                    int EmployeeID) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(NA));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(NB));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(NC));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(ND));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(NE));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(NF));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(NG));
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(NH));
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(NI));
            this.Adapter.InsertCommand.Parameters[9].Value = ((int)(NJ));
            this.Adapter.InsertCommand.Parameters[10].Value = ((int)(NK));
            this.Adapter.InsertCommand.Parameters[11].Value = ((int)(NN));
            this.Adapter.InsertCommand.Parameters[12].Value = ((int)(N));
            this.Adapter.InsertCommand.Parameters[13].Value = ((int)(EA));
            this.Adapter.InsertCommand.Parameters[14].Value = ((int)(EB));
            this.Adapter.InsertCommand.Parameters[15].Value = ((int)(EC));
            this.Adapter.InsertCommand.Parameters[16].Value = ((int)(ED));
            this.Adapter.InsertCommand.Parameters[17].Value = ((int)(EE));
            this.Adapter.InsertCommand.Parameters[18].Value = ((int)(EF));
            this.Adapter.InsertCommand.Parameters[19].Value = ((int)(EG));
            this.Adapter.InsertCommand.Parameters[20].Value = ((int)(EH));
            this.Adapter.InsertCommand.Parameters[21].Value = ((int)(EI));
            this.Adapter.InsertCommand.Parameters[22].Value = ((int)(EJ));
            this.Adapter.InsertCommand.Parameters[23].Value = ((int)(EK));
            this.Adapter.InsertCommand.Parameters[24].Value = ((int)(EN));
            this.Adapter.InsertCommand.Parameters[25].Value = ((int)(E));
            this.Adapter.InsertCommand.Parameters[26].Value = ((int)(OA));
            this.Adapter.InsertCommand.Parameters[27].Value = ((int)(OB));
            this.Adapter.InsertCommand.Parameters[28].Value = ((int)(OC));
            this.Adapter.InsertCommand.Parameters[29].Value = ((int)(OD));
            this.Adapter.InsertCommand.Parameters[30].Value = ((int)(OE));
            this.Adapter.InsertCommand.Parameters[31].Value = ((int)(OF));
            this.Adapter.InsertCommand.Parameters[32].Value = ((int)(OG));
            this.Adapter.InsertCommand.Parameters[33].Value = ((int)(OH));
            this.Adapter.InsertCommand.Parameters[34].Value = ((int)(OI));
            this.Adapter.InsertCommand.Parameters[35].Value = ((int)(OJ));
            this.Adapter.InsertCommand.Parameters[36].Value = ((int)(OK));
            this.Adapter.InsertCommand.Parameters[37].Value = ((int)(ON));
            this.Adapter.InsertCommand.Parameters[38].Value = ((int)(O));
            this.Adapter.InsertCommand.Parameters[39].Value = ((int)(AA));
            this.Adapter.InsertCommand.Parameters[40].Value = ((int)(AB));
            this.Adapter.InsertCommand.Parameters[41].Value = ((int)(AC));
            this.Adapter.InsertCommand.Parameters[42].Value = ((int)(AD));
            this.Adapter.InsertCommand.Parameters[43].Value = ((int)(AE));
            this.Adapter.InsertCommand.Parameters[44].Value = ((int)(AF));
            this.Adapter.InsertCommand.Parameters[45].Value = ((int)(AG));
            this.Adapter.InsertCommand.Parameters[46].Value = ((int)(AH));
            this.Adapter.InsertCommand.Parameters[47].Value = ((int)(AI));
            this.Adapter.InsertCommand.Parameters[48].Value = ((int)(AJ));
            this.Adapter.InsertCommand.Parameters[49].Value = ((int)(AK));
            this.Adapter.InsertCommand.Parameters[50].Value = ((int)(AN));
            this.Adapter.InsertCommand.Parameters[51].Value = ((int)(A));
            this.Adapter.InsertCommand.Parameters[52].Value = ((int)(CA));
            this.Adapter.InsertCommand.Parameters[53].Value = ((int)(CB));
            this.Adapter.InsertCommand.Parameters[54].Value = ((int)(CC));
            this.Adapter.InsertCommand.Parameters[55].Value = ((int)(CD));
            this.Adapter.InsertCommand.Parameters[56].Value = ((int)(CE));
            this.Adapter.InsertCommand.Parameters[57].Value = ((int)(CF));
            this.Adapter.InsertCommand.Parameters[58].Value = ((int)(CG));
            this.Adapter.InsertCommand.Parameters[59].Value = ((int)(CH));
            this.Adapter.InsertCommand.Parameters[60].Value = ((int)(CI));
            this.Adapter.InsertCommand.Parameters[61].Value = ((int)(CJ));
            this.Adapter.InsertCommand.Parameters[62].Value = ((int)(CK));
            this.Adapter.InsertCommand.Parameters[63].Value = ((int)(CN));
            this.Adapter.InsertCommand.Parameters[64].Value = ((int)(C));
            this.Adapter.InsertCommand.Parameters[65].Value = ((int)(EmployeeID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int NA, 
                    int NB, 
                    int NC, 
                    int ND, 
                    int NE, 
                    int NF, 
                    int NG, 
                    int NH, 
                    int NI, 
                    int NJ, 
                    int NK, 
                    int NN, 
                    int N, 
                    int EA, 
                    int EB, 
                    int EC, 
                    int ED, 
                    int EE, 
                    int EF, 
                    int EG, 
                    int EH, 
                    int EI, 
                    int EJ, 
                    int EK, 
                    int EN, 
                    int E, 
                    int OA, 
                    int OB, 
                    int OC, 
                    int OD, 
                    int OE, 
                    int OF, 
                    int OG, 
                    int OH, 
                    int OI, 
                    int OJ, 
                    int OK, 
                    int ON, 
                    int O, 
                    int AA, 
                    int AB, 
                    int AC, 
                    int AD, 
                    int AE, 
                    int AF, 
                    int AG, 
                    int AH, 
                    int AI, 
                    int AJ, 
                    int AK, 
                    int AN, 
                    int A, 
                    int CA, 
                    int CB, 
                    int CC, 
                    int CD, 
                    int CE, 
                    int CF, 
                    int CG, 
                    int CH, 
                    int CI, 
                    int CJ, 
                    int CK, 
                    int CN, 
                    int C, 
                    int EmployeeID, 
                    int Original_NeoID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(NA));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(NB));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(NC));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(ND));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(NE));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(NF));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(NG));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(NH));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(NI));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(NJ));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(NK));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(NN));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(N));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(EA));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(EB));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(EC));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(ED));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(EE));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(EF));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(EG));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(EH));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(EI));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(EJ));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(EK));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(EN));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(E));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(OA));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(OB));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(OC));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(OD));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(OE));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(OF));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(OG));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((int)(OH));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(OI));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((int)(OJ));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(OK));
            this.Adapter.UpdateCommand.Parameters[37].Value = ((int)(ON));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(O));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((int)(AA));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((int)(AB));
            this.Adapter.UpdateCommand.Parameters[41].Value = ((int)(AC));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((int)(AD));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(AE));
            this.Adapter.UpdateCommand.Parameters[44].Value = ((int)(AF));
            this.Adapter.UpdateCommand.Parameters[45].Value = ((int)(AG));
            this.Adapter.UpdateCommand.Parameters[46].Value = ((int)(AH));
            this.Adapter.UpdateCommand.Parameters[47].Value = ((int)(AI));
            this.Adapter.UpdateCommand.Parameters[48].Value = ((int)(AJ));
            this.Adapter.UpdateCommand.Parameters[49].Value = ((int)(AK));
            this.Adapter.UpdateCommand.Parameters[50].Value = ((int)(AN));
            this.Adapter.UpdateCommand.Parameters[51].Value = ((int)(A));
            this.Adapter.UpdateCommand.Parameters[52].Value = ((int)(CA));
            this.Adapter.UpdateCommand.Parameters[53].Value = ((int)(CB));
            this.Adapter.UpdateCommand.Parameters[54].Value = ((int)(CC));
            this.Adapter.UpdateCommand.Parameters[55].Value = ((int)(CD));
            this.Adapter.UpdateCommand.Parameters[56].Value = ((int)(CE));
            this.Adapter.UpdateCommand.Parameters[57].Value = ((int)(CF));
            this.Adapter.UpdateCommand.Parameters[58].Value = ((int)(CG));
            this.Adapter.UpdateCommand.Parameters[59].Value = ((int)(CH));
            this.Adapter.UpdateCommand.Parameters[60].Value = ((int)(CI));
            this.Adapter.UpdateCommand.Parameters[61].Value = ((int)(CJ));
            this.Adapter.UpdateCommand.Parameters[62].Value = ((int)(CK));
            this.Adapter.UpdateCommand.Parameters[63].Value = ((int)(CN));
            this.Adapter.UpdateCommand.Parameters[64].Value = ((int)(C));
            this.Adapter.UpdateCommand.Parameters[65].Value = ((int)(EmployeeID));
            this.Adapter.UpdateCommand.Parameters[66].Value = ((int)(Original_NeoID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class StatussTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public StatussTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Statuss";
            tableMapping.ColumnMappings.Add("StatussID", "StatussID");
            tableMapping.ColumnMappings.Add("Status", "Status");
            tableMapping.ColumnMappings.Add("NumberSend", "NumberSend");
            tableMapping.ColumnMappings.Add("Attach", "Attach");
            tableMapping.ColumnMappings.Add("EmployeeID", "EmployeeID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Statuss] WHERE (([StatussID] = @Original_StatussID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StatussID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StatussID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Statuss] ([Status], [NumberSend], [Attach], [EmployeeID]) VALU" +
                "ES (@Status, @NumberSend, @Attach, @EmployeeID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Status", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberSend", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberSend", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Attach", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Attach", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Statuss] SET [Status] = @Status, [NumberSend] = @NumberSend, [Attac" +
                "h] = @Attach, [EmployeeID] = @EmployeeID WHERE (([StatussID] = @Original_Statuss" +
                "ID))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Status", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberSend", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberSend", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Attach", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Attach", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StatussID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StatussID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ManagerEmployeeNeoCharacterContext"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT StatussID, Status, NumberSend, Attach, EmployeeID FROM dbo.Statuss";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ManagerEmployeeNeoCharacterDataSet.StatussDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ManagerEmployeeNeoCharacterDataSet.StatussDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ManagerEmployeeNeoCharacterDataSet.StatussDataTable dataTable = new ManagerEmployeeNeoCharacterDataSet.StatussDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ManagerEmployeeNeoCharacterDataSet.StatussDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ManagerEmployeeNeoCharacterDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Statuss");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_StatussID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_StatussID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(bool Status, bool NumberSend, bool Attach, int EmployeeID) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((bool)(Status));
            this.Adapter.InsertCommand.Parameters[1].Value = ((bool)(NumberSend));
            this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(Attach));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(EmployeeID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(bool Status, bool NumberSend, bool Attach, int EmployeeID, int Original_StatussID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((bool)(Status));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((bool)(NumberSend));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(Attach));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(EmployeeID));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_StatussID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private CharacterTableAdapter _characterTableAdapter;
        
        private EmployeeTableAdapter _employeeTableAdapter;
        
        private NeoTableAdapter _neoTableAdapter;
        
        private StatussTableAdapter _statussTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public CharacterTableAdapter CharacterTableAdapter {
            get {
                return this._characterTableAdapter;
            }
            set {
                this._characterTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public EmployeeTableAdapter EmployeeTableAdapter {
            get {
                return this._employeeTableAdapter;
            }
            set {
                this._employeeTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public NeoTableAdapter NeoTableAdapter {
            get {
                return this._neoTableAdapter;
            }
            set {
                this._neoTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public StatussTableAdapter StatussTableAdapter {
            get {
                return this._statussTableAdapter;
            }
            set {
                this._statussTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._characterTableAdapter != null) 
                            && (this._characterTableAdapter.Connection != null))) {
                    return this._characterTableAdapter.Connection;
                }
                if (((this._employeeTableAdapter != null) 
                            && (this._employeeTableAdapter.Connection != null))) {
                    return this._employeeTableAdapter.Connection;
                }
                if (((this._neoTableAdapter != null) 
                            && (this._neoTableAdapter.Connection != null))) {
                    return this._neoTableAdapter.Connection;
                }
                if (((this._statussTableAdapter != null) 
                            && (this._statussTableAdapter.Connection != null))) {
                    return this._statussTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._characterTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._employeeTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._neoTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._statussTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(ManagerEmployeeNeoCharacterDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._employeeTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Employee.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._employeeTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._characterTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Character.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._characterTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._neoTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Neo.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._neoTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._statussTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Statuss.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._statussTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(ManagerEmployeeNeoCharacterDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._employeeTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Employee.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._employeeTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._characterTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Character.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._characterTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._neoTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Neo.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._neoTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._statussTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Statuss.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._statussTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(ManagerEmployeeNeoCharacterDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._statussTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Statuss.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._statussTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._neoTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Neo.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._neoTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._characterTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Character.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._characterTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._employeeTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Employee.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._employeeTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(ManagerEmployeeNeoCharacterDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._characterTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._characterTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._employeeTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._employeeTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._neoTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._neoTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._statussTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._statussTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._characterTableAdapter != null)) {
                    revertConnections.Add(this._characterTableAdapter, this._characterTableAdapter.Connection);
                    this._characterTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._characterTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._characterTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._characterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._characterTableAdapter.Adapter);
                    }
                }
                if ((this._employeeTableAdapter != null)) {
                    revertConnections.Add(this._employeeTableAdapter, this._employeeTableAdapter.Connection);
                    this._employeeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._employeeTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._employeeTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._employeeTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._employeeTableAdapter.Adapter);
                    }
                }
                if ((this._neoTableAdapter != null)) {
                    revertConnections.Add(this._neoTableAdapter, this._neoTableAdapter.Connection);
                    this._neoTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._neoTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._neoTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._neoTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._neoTableAdapter.Adapter);
                    }
                }
                if ((this._statussTableAdapter != null)) {
                    revertConnections.Add(this._statussTableAdapter, this._statussTableAdapter.Connection);
                    this._statussTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._statussTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._statussTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._statussTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._statussTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._characterTableAdapter != null)) {
                    this._characterTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._characterTableAdapter]));
                    this._characterTableAdapter.Transaction = null;
                }
                if ((this._employeeTableAdapter != null)) {
                    this._employeeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._employeeTableAdapter]));
                    this._employeeTableAdapter.Transaction = null;
                }
                if ((this._neoTableAdapter != null)) {
                    this._neoTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._neoTableAdapter]));
                    this._neoTableAdapter.Transaction = null;
                }
                if ((this._statussTableAdapter != null)) {
                    this._statussTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._statussTableAdapter]));
                    this._statussTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591